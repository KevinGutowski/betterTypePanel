{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/my-command.js","webpack://exports/external \"sketch\""],"names":["COScript","currentCOScript","setShouldKeepAround_","threadIdentifier","verticalPositionPopupButtonID","radioButtonProportionalID","radioButtonMonospacedOrTabularID","pushOnOffButtonLowerCaseID","pushOnOffButtonUpperCaseID","radioButtonLiningFiguresID","radioButtonOldStyleFiguresID","sfSymbolSizePopupButtonID","sfSymbolSizeRow","vibrancyViewID","panelWidth","panelHeight","runPanel","setupFramework","framework","main","HSMain","alloc","init","beginObservingTextViewSelectionChanges","setCallbackForTextViewSelectionChange","updateUI","shutdown","stopObservingTextViewSelectionChanges","error","console","selectionChanged","context","threadDictionary","NSThread","mainThread","textChanged","useFullSelection","scriptPath","env","scriptURL","path","HelloSketch_FrameworkPath","stringByDeletingLastPathComponent","HelloSketch_Log","log","mocha","Mocha","sharedRuntime","frameworkName","directory","valueForKey","loadFrameworkWithName_inDirectory","setValue_forKey_","closePanel","panelOpen","setupPanel","identifier","panel","NSPanel","setFrame_display","NSMakeRect","setStyleMask","NSTexturedBackgroundWindowMask","NSTitledWindowMask","NSClosableWindowMask","title","center","makeKeyAndOrderFront","setLevel","NSFloatingWindowLevel","standardWindowButton","NSWindowMiniaturizeButton","setHidden","NSWindowZoomButton","column1width","column2width","columnSpacing","rowSpacing","mainViewWidth","verticalPositionLabel","createTextField","text","frame","alignment","NSTextAlignmentRight","addConstraint","NSLayoutConstraint","constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant","NSLayoutAttributeWidth","NSLayoutRelationEqual","nil","NSLayoutAttributeNotAnAttribute","verticalPositionPopupButton","NSPopUpButton","initWithFrame","addItemsWithTitles","itemWithTitle","verticalPositionTargetFunction","sender","settingsAttribute","getSettingsAttributeForKey_Value","kVerticalPositionType","kSuperiorsSelector","updateFontFeatureSettingsAttribute","kInferiorsSelector","kOrdinalsSelector","kScientificInferiorsSelector","kNormalPositionSelector","setCOSJSTargetFunction","row1","NSStackView","setOrientation","NSUserInterfaceLayoutOrientationHorizontal","setAlignment","NSLayoutAttributeFirstBaseline","setSpacing","setViews_inGravity","NSStackViewGravityLeading","numberSpacingLabel","radioButtonProportional","NSButton","setButtonType","NSRadioButton","setTitle","setState","NSOnState","radioButtonMonospacedOrTabular","NSOffState","numberSpacingTargetFunction","kNumberSpacingType","kProportionalNumbersSelector","kMonospacedNumbersSelector","numberSpacingRadioGroupStackView","stackViewWithViews","NSUserInterfaceLayoutOrientationVertical","NSLayoutAttributeLeading","setTranslatesAutoresizingMaskIntoConstraints","row2","numberCaseLabel","radioButtonLiningFigures","radioButtonOldStyleFigures","numberCaseTargetFunction","kNumberCaseType","kLowerCaseNumbersSelector","kUpperCaseNumbersSelector","numberCaseRadioGroupStackView","row3","smallCapsLabel","smallCapsExampleLabel","NSTextAlignmentLeft","pushOnOffButtonLowerCase","NSButtonTypeOnOff","setBezelStyle","NSRoundedBezelStyle","lowerCaseAttributedString","NSMutableAttributedString","new","initWithString","lowerCaseRange","NSMakeRange","lowerCaseFont","getFontForKey_Value","setAlignment_range","NSTextAlignmentCenter","addAttribute_value_range","NSFontAttributeName","setAttributedTitle","smallCapsLowerCaseTargetFunction","state","kLowerCaseType","kDefaultLowerCaseSelector","kLowerCaseSmallCapsSelector","lowerCaseLabel","fontSize","lowerCaseStackView","NSLayoutAttributeCenterX","pushOnOffButtonUpperCase","upperCaseAttributedString","upperCaseRange","upperCaseFont","centerAlignUpperCase","NSMutableParagraphStyle","smallCapsUpperCaseTargetFunction","kUpperCaseType","kDefaultUpperCaseSelector","kUpperCaseSmallCapsSelector","upperCaseLabel","upperCaseStackView","smallCapsButtonGroupStackView","row4","sfSymbolSizeLabel","sfSymbolSizePopupButton","sfSymbolSizeTargetFunction","settingsAttributeSFSmall","kStylisticAlternativesType","kStylisticAltFifteenOnSelector","settingsAttributeSFLarge","kStylisticAltSixteenOffSelector","settingsAttributes","forEach","kStylisticAltFifteenOffSelector","kStylisticAltSixteenOnSelector","logWarning","row5","mainContentView","contentView","addSubview","setFlipped","fitSubviewToView","addVibrancyView","closeButton","NSWindowCloseButton","superview","vibrancy","NSView","setBackgroundColor","NSColor","colorWithRed_green_blue_alpha","setWantsLayer","fontWarning","setTextColor","whiteColor","addEdgeConstraint","NSLayoutAttributeTop","getBlurFilter","blurFilter","CIFilter","filterWithName","setDefaults","setValue_forKey","setName","subview","view","constants","NSLayoutAttributeTrailing","NSLayoutAttributeBottom","layoutAttribute","constant","label","NSTextField","setStringValue","setFont","NSFont","systemFontOfSize","setBezeled","setDrawsBackground","setEditable","setSelectable","document","sketch","getSelectedDocument","selectedLayers","layers","textLayers","filter","layer","type","textLayer","font","sketchObject","pointSize","fontFeatureSettings","fontDescriptor","fontAttributes","NSFontFeatureSettingsAttribute","descriptor","fontDescriptorByAddingAttributes","newFont","fontWithDescriptor_size","isEditingText","textView","editingDelegate","textStorage","fonts","getFontsFromTextLayer","fontWithRange","range","attrsDict","NSDictionary","dictionaryWithObject_forKey","addAttributes_range","didChangeText","inspectorController","reload","key","value","defaultButtonFont","boldSystemFontOfSize","NSFontFeatureTypeIdentifierKey","NSFontFeatureSelectorIdentifierKey","warning","disableUI","isHidden","setBackgroundFilters","length","textLayersFeatureSettings","fontSettingsObjects","checkToShowSFSymbolOption","currentSettings","getSettingsForFont","push","updatedUISettings","fontSetting","Object","keys","property","onlyUnique","index","self","indexOf","showWarningMessage","setting","uiSetting","setEnabled","clearVerticalPositionPopupButtonState","selectItemWithTitle","verticalPositionSetting","NSControlStateValueMixed","NSControlStateValueOn","clearSFSymbolSizePopupButton","sfSymbolSizeSetting","optionsToDisableArray","includes","close","removeObjectForKey","getDefaultUISettings","NSControlStateValueOff","msTextLayer","effectiveRange","MOPointer","mutableAttrString","selectedRange","textViewExists","attributedString","attributedStringValue","attribute_atIndex_longestEffectiveRange_inRange","location","NSMaxRange","familyName","showSFSymbolOption","supportedFontFamilies","panelX","origin","x","panelY","y","size","height","fontFamily","setFrame_display_animate","getOptionsToDisableFromFont","coreTextFont","CTFontCreateWithName","fontName","features","CTFontCopyFeatures","featuresArray","bridgeArray","optionsToDisableForFont","getOptionsToDisableFromFeaturesArray","toLowerCase","trim","featureIDs","feature","Number","currentOptions","disableOptions","option","verticalPosition","numberSpacing","numberCase","smallCapsLowerCase","smallCapsUpperCase","sfSymbolSize","featureSetting","featureTypeIdentifierKey","featureSelectorIdentifierKey"],"mappings":"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","file":"my-command.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/my-command.js\");\n","import sketch from 'sketch'\n// Documentation:\n// https://developer.sketchapp.com/reference/api/\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n\nCOScript.currentCOScript().setShouldKeepAround_(true)\n\nlet threadIdentifier = \"com.betterTypePanel\"\nlet verticalPositionPopupButtonID = \"com.betterTypePanel.popupButton.verticalPosition\"\nlet radioButtonProportionalID = \"com.betterTypePanel.radioButton.proportional\"\nlet radioButtonMonospacedOrTabularID = \"com.betterTypePanel.radioButton.monospaced\"\nlet pushOnOffButtonLowerCaseID = \"com.betterTypePanel.button.lowerCase\"\nlet pushOnOffButtonUpperCaseID = \"com.betterTypePanel.button.upperCase\"\nlet radioButtonLiningFiguresID = \"com.betterTypePanel.radioButton.liningFigures\"\nlet radioButtonOldStyleFiguresID = \"com.betterTypePanel.radioButton.oldStyle\"\nlet sfSymbolSizePopupButtonID = \"com.betterTypePanel.popupButton.sfSymbolSize\"\nlet sfSymbolSizeRow = \"com.betterTypePanel.row.sfSymbolSize\"\nlet vibrancyViewID = \"com.betterTypePanel.vibrancy\"\nvar panelWidth = 312\nvar panelHeight = 210\n\nexport default function() {\n    runPanel()\n\n    setupFramework()\n    framework(\"CoreText\");\n\n    let main = HSMain.alloc().init()\n    main.beginObservingTextViewSelectionChanges()\n    main.setCallbackForTextViewSelectionChange(() => {\n        updateUI()\n    })\n\n    updateUI()\n}\n\nexport function shutdown() {\n    try {\n        setupFramework()\n        let main = HSMain.alloc().init()\n        main.stopObservingTextViewSelectionChanges()\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport function selectionChanged(context) {\n    framework(\"CoreText\");\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    // check if the panel is open, if open update UI, else just do nothing\n    if (threadDictionary[threadIdentifier]) {\n        updateUI()\n    } else {\n        return\n    }\n}\n\nexport function textChanged() {\n    framework(\"CoreText\");\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    // check if the panel is open, if open update UI, else just do nothing\n    if (threadDictionary[threadIdentifier]) {\n        let useFullSelection = true\n        updateUI(useFullSelection)\n    } else {\n        return\n    }\n}\n\nfunction setupFramework() {\n    var scriptPath = COScript.currentCOScript().env().scriptURL.path()\n    var HelloSketch_FrameworkPath = scriptPath.stringByDeletingLastPathComponent().stringByDeletingLastPathComponent() + \"/Resources\"\n    var HelloSketch_Log = HelloSketch_Log || log;\n    (function() {\n        var mocha = Mocha.sharedRuntime();\n        var frameworkName = \"HelloSketch\";\n        var directory = HelloSketch_FrameworkPath;\n        if (mocha.valueForKey(frameworkName)) {\n            //HelloSketch_Log(\"😎 betterTypePanel loadFramework: `\" + frameworkName + \"` already loaded.\");\n            return true;\n        } else if (mocha.loadFrameworkWithName_inDirectory(frameworkName, directory)) {\n            //HelloSketch_Log(\"✅ betterTypePanel loadFramework: `\" + frameworkName + \"` success!\");\n            mocha.setValue_forKey_(true, frameworkName);\n            return true;\n        } else {\n            HelloSketch_Log(\"❌ betterTypePanel loadFramework: `\" + frameworkName + \"` failed!: \" + directory + \". Please define HelloSketch_FrameworkPath if you're trying to @import in a custom plugin - scriptPath: \" + scriptPath);\n            return false;\n        }\n    })();\n}\n\nfunction runPanel() {\n    // console.log(\"Setting Up Panel\")\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n\n    // If there is already a panel, close it\n    if (threadDictionary[threadIdentifier]) {\n        closePanel(threadDictionary[threadIdentifier], threadDictionary, threadIdentifier)\n    } else {\n        threadDictionary.panelOpen = true\n        setupPanel(threadDictionary, threadIdentifier)\n    }\n\n}\n\nfunction setupPanel(threadDictionary, identifier) {\n    let panel = NSPanel.alloc().init()\n    panel.setFrame_display(NSMakeRect(0, 0, panelWidth, panelHeight), true)\n    panel.setStyleMask(NSTexturedBackgroundWindowMask | NSTitledWindowMask | NSClosableWindowMask)\n    panel.title = \"BetterTypePanel\"\n\n    panel.center()\n    panel.makeKeyAndOrderFront(null)\n    panel.setLevel(NSFloatingWindowLevel)\n\n    panel.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true)\n    panel.standardWindowButton(NSWindowZoomButton).setHidden(true)\n\n    threadDictionary[identifier] = panel\n\n    const column1width = 109\n    const column2width = 171\n    const columnSpacing = 4\n    const rowSpacing = 8\n    const mainViewWidth = column1width + column2width + columnSpacing\n\n    // MARK: SETUP ROW 1\n    var verticalPositionLabel = createTextField({\n        text: \"Number Position:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    verticalPositionLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        verticalPositionLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    var verticalPositionPopupButton = NSPopUpButton.alloc().initWithFrame(NSMakeRect(0,0,150,25))\n    verticalPositionPopupButton.addItemsWithTitles([\n        'Default Position',\n        'Superscript',\n        'Subscript',\n        'Ordinals',\n        'Scientific Notation',\n        'Multiple'\n    ])\n\n    threadDictionary[verticalPositionPopupButtonID] = verticalPositionPopupButton\n    verticalPositionPopupButton.itemWithTitle('Multiple').setHidden(true)\n\n    let verticalPositionTargetFunction = (sender) => {\n        // console.log(sender.title() + ' dropdown button was selected')\n        // Vertical Position\n        // ID: kVerticalPositionType\n        //\n        // Selectors\n        //\n        // kNormalPositionSelector\n        // This is the default. It means to display the text with no vertical displacement.\n        //\n        // kSuperiorsSelector\n        // Changes any characters having superior forms in the font into those forms.\n        //\n        // kInferiorsSelector\n        // Changes any characters having inferior forms in the font into those forms.\n        //\n        // kOrdinalsSelector\n        // Contextually changes certain letters into their superior forms, like in Spanish changing from 1a to 1ª.\n        //\n        // kScientificInferiorsSelector\n        // Changes any characters having them into inferior forms designed for a technical context (as in H2O).\n        //\n        if (sender.title() == 'Superscript') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kSuperiorsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else if (sender.title() == 'Subscript') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kInferiorsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else if (sender.title() == 'Ordinals') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kOrdinalsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else if (sender.title() == 'Scientific Notation') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kScientificInferiorsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kNormalPositionSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n\n    verticalPositionPopupButton.setCOSJSTargetFunction(sender => verticalPositionTargetFunction(sender))\n\n    var row1 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,25))\n    row1.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row1.setAlignment(NSLayoutAttributeFirstBaseline)\n    row1.setSpacing(columnSpacing)\n    row1.setViews_inGravity([verticalPositionLabel,verticalPositionPopupButton],NSStackViewGravityLeading)\n\n    // MARK: Setup Row 2\n    var numberSpacingLabel = createTextField({\n        text: \"Number Spacing:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    numberSpacingLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        numberSpacingLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    let radioButtonProportional = NSButton.alloc().initWithFrame(NSMakeRect(0,0,97,18))\n    radioButtonProportional.setButtonType(NSRadioButton)\n    radioButtonProportional.setTitle('Proportional')\n    radioButtonProportional.setState(NSOnState)\n\n    threadDictionary[radioButtonProportionalID] = radioButtonProportional\n\n    let radioButtonMonospacedOrTabular = NSButton.alloc().initWithFrame(NSMakeRect(0,0,150,18))\n    radioButtonMonospacedOrTabular.setButtonType(NSRadioButton)\n    radioButtonMonospacedOrTabular.setTitle('Monospaced/Tabular')\n    radioButtonMonospacedOrTabular.setState(NSOffState)\n\n    threadDictionary[radioButtonMonospacedOrTabularID] = radioButtonMonospacedOrTabular\n\n    let numberSpacingTargetFunction = (sender) => {\n        // console.log(sender.title() + ' radio button was clicked')\n\n        if (sender.title() == 'Proportional') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberSpacingType, kProportionalNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberSpacingType, kMonospacedNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n\n    radioButtonProportional.setCOSJSTargetFunction(sender => numberSpacingTargetFunction(sender))\n    radioButtonMonospacedOrTabular.setCOSJSTargetFunction(sender => numberSpacingTargetFunction(sender))\n\n    var numberSpacingRadioGroupStackView = NSStackView.stackViewWithViews([radioButtonProportional, radioButtonMonospacedOrTabular])\n    numberSpacingRadioGroupStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    numberSpacingRadioGroupStackView.setAlignment(NSLayoutAttributeLeading)\n    numberSpacingRadioGroupStackView.setSpacing(4)\n    numberSpacingRadioGroupStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var row2 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,36))\n    row2.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row2.setAlignment(NSLayoutAttributeFirstBaseline)\n    row2.setSpacing(columnSpacing)\n    row2.setViews_inGravity([numberSpacingLabel, numberSpacingRadioGroupStackView], NSStackViewGravityLeading)\n\n    // MARK: Setup Row 3\n    var numberCaseLabel = createTextField({\n        text: \"Number Case:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    numberCaseLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        numberCaseLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    var radioButtonLiningFigures = NSButton.alloc().initWithFrame(NSMakeRect(0,0,104,17))\n    radioButtonLiningFigures.setButtonType(NSRadioButton)\n    radioButtonLiningFigures.setTitle('Lining figures')\n    radioButtonLiningFigures.setState(NSOnState)\n\n    threadDictionary[radioButtonLiningFiguresID] = radioButtonLiningFigures\n\n    var radioButtonOldStyleFigures = NSButton.alloc().initWithFrame(NSMakeRect(0,0,124,18))\n    radioButtonOldStyleFigures.setButtonType(NSRadioButton)\n    radioButtonOldStyleFigures.setTitle('Old-style figures')\n    radioButtonOldStyleFigures.setState(NSOffState)\n\n    threadDictionary[radioButtonOldStyleFiguresID] = radioButtonOldStyleFigures\n\n    let numberCaseTargetFunction = (sender) => {\n        // console.log(sender.title() + ' radio button was clicked')\n\n        if (sender.title() == \"Old-style figures\") {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberCaseType, kLowerCaseNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberCaseType, kUpperCaseNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n\n    radioButtonLiningFigures.setCOSJSTargetFunction(sender => numberCaseTargetFunction(sender))\n    radioButtonOldStyleFigures.setCOSJSTargetFunction(sender => numberCaseTargetFunction(sender))\n\n    var numberCaseRadioGroupStackView = NSStackView.stackViewWithViews([radioButtonLiningFigures,radioButtonOldStyleFigures])\n    numberCaseRadioGroupStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    numberCaseRadioGroupStackView.setAlignment(NSLayoutAttributeLeading)\n    numberCaseRadioGroupStackView.setSpacing(4)\n    numberCaseRadioGroupStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var row3 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,36))\n    row3.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row3.setAlignment(NSLayoutAttributeFirstBaseline)\n    row3.setSpacing(columnSpacing)\n    row3.setViews_inGravity([numberCaseLabel, numberCaseRadioGroupStackView], NSStackViewGravityLeading)\n\n    // MARK: Setup Row 4\n    var smallCapsLabel = createTextField({\n        text: \"Small Caps:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    smallCapsLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        smallCapsLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    var smallCapsExampleLabel = createTextField({\n        text: \"Tt →\",\n        frame: NSMakeRect(0,0,32,17),\n        alignment: NSTextAlignmentLeft,\n    })\n\n    var pushOnOffButtonLowerCase = NSButton.alloc().initWithFrame(NSMakeRect(0,0,72,32))\n    pushOnOffButtonLowerCase.setButtonType(NSButtonTypeOnOff)\n    pushOnOffButtonLowerCase.setBezelStyle(NSRoundedBezelStyle)\n\n    let lowerCaseAttributedString = NSMutableAttributedString.new().initWithString(\"Tt\")\n    let lowerCaseRange = NSMakeRange(1,1)\n    let lowerCaseFont = getFontForKey_Value(37,1)\n    lowerCaseAttributedString.setAlignment_range(NSTextAlignmentCenter, NSMakeRange(0,2))\n    lowerCaseAttributedString.addAttribute_value_range(NSFontAttributeName,lowerCaseFont,lowerCaseRange)\n    pushOnOffButtonLowerCase.setAttributedTitle(lowerCaseAttributedString)\n    pushOnOffButtonLowerCase.setState(NSOffState)\n\n    pushOnOffButtonLowerCase.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        pushOnOffButtonLowerCase,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        60\n    ))\n\n    threadDictionary[pushOnOffButtonLowerCaseID] = pushOnOffButtonLowerCase\n\n    let smallCapsLowerCaseTargetFunction = (sender) => {\n        // console.log(sender.title() + ' toggle was clicked')\n        // Small Caps Lower Case\n        // ID: kLowerCaseType\n        //\n        // SELECTORS\n        // kDefaultLowerCaseSelector = 0\n        // Use standard lower-case glyphs\n        //\n        // kLowerCaseSmallCapsSelector = 1\n        // Display lower-case glyphs as small caps. (This is the most common way of displaying small caps.)\n        //\n        // kLowerCasePetiteCapsSelector = 2\n        // Display lower-case glyphs as petite caps\n        //\n        if (sender.state() == 0) {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kLowerCaseType, kDefaultLowerCaseSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kLowerCaseType, kLowerCaseSmallCapsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n    pushOnOffButtonLowerCase.setCOSJSTargetFunction(sender => smallCapsLowerCaseTargetFunction(sender))\n\n    var lowerCaseLabel = createTextField({\n        text: \"Lower Case\",\n        frame: NSMakeRect(0,0,65,14),\n        alignment: NSTextAlignmentCenter,\n        fontSize: 11\n    })\n\n    var lowerCaseStackView = NSStackView.stackViewWithViews([pushOnOffButtonLowerCase,lowerCaseLabel])\n    lowerCaseStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    lowerCaseStackView.setAlignment(NSLayoutAttributeCenterX)\n    lowerCaseStackView.setSpacing(4)\n    lowerCaseStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var pushOnOffButtonUpperCase = NSButton.alloc().initWithFrame(NSMakeRect(0,0,72,32))\n    pushOnOffButtonUpperCase.setButtonType(NSButtonTypeOnOff)\n    pushOnOffButtonUpperCase.setBezelStyle(NSRoundedBezelStyle)\n\n    let upperCaseAttributedString = NSMutableAttributedString.new().initWithString(\"Tt\")\n    let upperCaseRange = NSMakeRange(0,1)\n    let upperCaseFont = getFontForKey_Value(38,1)\n    upperCaseAttributedString.setAlignment_range(NSTextAlignmentCenter, NSMakeRange(0,2))\n    let centerAlignUpperCase = NSMutableParagraphStyle.new().init().setAlignment(NSTextAlignmentCenter)\n    upperCaseAttributedString.addAttribute_value_range(NSFontAttributeName, upperCaseFont, upperCaseRange)\n    pushOnOffButtonUpperCase.setAttributedTitle(upperCaseAttributedString)\n    pushOnOffButtonUpperCase.setState(NSOffState)\n\n    pushOnOffButtonUpperCase.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        pushOnOffButtonUpperCase,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        60\n    ))\n\n    threadDictionary[pushOnOffButtonUpperCaseID] = pushOnOffButtonUpperCase\n\n    let smallCapsUpperCaseTargetFunction = (sender) => {\n        // console.log(sender.title() + ' toggle was clicked')\n        //Small Caps Upper Case\n        // ID: kUpperCaseType\n        //\n        // SELECTORS\n        //\n        // kDefaultUpperCaseSelector = 0\n        // Use standard upper-case glyphs\n        //\n        // kUpperCaseSmallCapsSelector = 1\n        // Display upper-case glyphs as small caps (used commonly with acronyms).\n        //\n        // kUpperCasePetiteCapsSelector = 2\n        // Display upper-case glyphs as petite caps\n        //\n        if (sender.state() == 0) {\n            //Need to set to default setting\n            let settingsAttribute = getSettingsAttributeForKey_Value(kUpperCaseType, kDefaultUpperCaseSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kUpperCaseType, kUpperCaseSmallCapsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n    pushOnOffButtonUpperCase.setCOSJSTargetFunction(sender => smallCapsUpperCaseTargetFunction(sender))\n\n    var upperCaseLabel = createTextField({\n        text: \"Upper Case\",\n        frame: NSMakeRect(0,0,66,14),\n        alignment: NSTextAlignmentCenter,\n        fontSize: 11\n    })\n\n    var upperCaseStackView = NSStackView.stackViewWithViews([pushOnOffButtonUpperCase,upperCaseLabel])\n    upperCaseStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    upperCaseStackView.setSpacing(4)\n    upperCaseStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var smallCapsButtonGroupStackView = NSStackView.stackViewWithViews([smallCapsExampleLabel,lowerCaseStackView,upperCaseStackView])\n    smallCapsButtonGroupStackView.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    smallCapsButtonGroupStackView.setAlignment(NSLayoutAttributeFirstBaseline)\n    smallCapsButtonGroupStackView.setSpacing(4)\n    smallCapsButtonGroupStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var row4 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,36))\n    row4.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row4.setAlignment(NSLayoutAttributeFirstBaseline)\n    row4.setSpacing(columnSpacing)\n    row4.setViews_inGravity([smallCapsLabel, smallCapsButtonGroupStackView], NSStackViewGravityLeading)\n\n    // MARK: SETUP ROW 5\n    var sfSymbolSizeLabel = createTextField({\n        text: \"SF Symbol Size:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    sfSymbolSizeLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        sfSymbolSizeLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    var sfSymbolSizePopupButton = NSPopUpButton.alloc().initWithFrame(NSMakeRect(0,0,150,25))\n    sfSymbolSizePopupButton.addItemsWithTitles([\n        'Small',\n        'Medium',\n        'Large',\n        'Multiple'\n    ])\n    threadDictionary[sfSymbolSizePopupButtonID] = sfSymbolSizePopupButton\n    sfSymbolSizePopupButton.itemWithTitle('Multiple').setHidden(true)\n\n    let sfSymbolSizeTargetFunction = (sender) => {\n        //console.log(sender.title() + ' dropdown button was selected')\n        // sfSymbolSizeLabel\n        // ID: kStylisticAlternativesType 35\n        //\n        // Selectors are very brittle. Need to figure out how to read StylisticAlts\n        // from font so I'm not guessing what number the selectors are (they could change).\n        // I should get their selectors progrmatically.\n        //\n        // kStylisticAltFifteenOnSelector\n        // This is referring to Small Symbols or Glyphs for the SF Pro Text Font\n        //\n        // kStylisticAltSixteenOnSelector\n        // This is referring to Large Symbols or Glyphs for the SF Pro Text Font\n        //\n        // Note:\n        // There is no Medium Symbols checkbox for SF Pro Text\n        if (sender.title() == 'Small') {\n            let settingsAttributeSFSmall = getSettingsAttributeForKey_Value(kStylisticAlternativesType, kStylisticAltFifteenOnSelector)\n            let settingsAttributeSFLarge = getSettingsAttributeForKey_Value(kStylisticAlternativesType, kStylisticAltSixteenOffSelector)\n            let settingsAttributes = [settingsAttributeSFSmall,settingsAttributeSFLarge]\n            settingsAttributes.forEach(settingsAttribute => {\n                //console.log(settingsAttribute)\n                updateFontFeatureSettingsAttribute(settingsAttribute)\n            })\n        } else if (sender.title() == 'Medium') {\n            let settingsAttributeSFSmall = getSettingsAttributeForKey_Value(kStylisticAlternativesType, kStylisticAltFifteenOffSelector)\n            let settingsAttributeSFLarge = getSettingsAttributeForKey_Value(kStylisticAlternativesType, kStylisticAltSixteenOffSelector)\n            let settingsAttributes = [settingsAttributeSFSmall,settingsAttributeSFLarge]\n            settingsAttributes.forEach(settingsAttribute => {\n                //console.log(settingsAttribute)\n                updateFontFeatureSettingsAttribute(settingsAttribute)\n            })\n        } else if (sender.title() == 'Large') {\n            let settingsAttributeSFSmall = getSettingsAttributeForKey_Value(kStylisticAlternativesType, kStylisticAltFifteenOffSelector)\n            let settingsAttributeSFLarge = getSettingsAttributeForKey_Value(kStylisticAlternativesType, kStylisticAltSixteenOnSelector)\n            let settingsAttributes = [settingsAttributeSFSmall,settingsAttributeSFLarge]\n            settingsAttributes.forEach(settingsAttribute => {\n                //console.log(settingsAttribute)\n                updateFontFeatureSettingsAttribute(settingsAttribute)\n            })\n        } else {\n            logWarning(\"Out of sfSymbolSizeDropdown bounds\")\n        }\n    }\n\n    sfSymbolSizePopupButton.setCOSJSTargetFunction(sender => sfSymbolSizeTargetFunction(sender))\n\n    var row5 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,25))\n    row5.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row5.setAlignment(NSLayoutAttributeFirstBaseline)\n    row5.setSpacing(columnSpacing)\n    row5.setViews_inGravity([sfSymbolSizeLabel,sfSymbolSizePopupButton],NSStackViewGravityLeading)\n\n    threadDictionary[sfSymbolSizeRow] = row5\n    row5.setHidden(true)\n\n    // MARK: Combine rows together\n    var mainContentView = NSStackView.stackViewWithViews([row1,row2,row3, row4, row5])\n    mainContentView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    mainContentView.setAlignment(NSLayoutAttributeLeading)\n    mainContentView.setSpacing(8)\n    mainContentView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    panel.contentView().addSubview(mainContentView)\n    panel.contentView().setFlipped(true)\n    fitSubviewToView(mainContentView,panel.contentView(),[16.0,16.0,8.0,16.0])\n\n    addVibrancyView(panel.contentView())\n\n    threadDictionary[identifier] = panel;\n\n    var closeButton = panel.standardWindowButton(NSWindowCloseButton)\n    closeButton.setCOSJSTargetFunction(function(sender) {\n        closePanel(panel, threadDictionary, identifier)\n    })\n}\n\nfunction addVibrancyView(superview) {\n    var vibrancy = NSView.alloc().initWithFrame(NSMakeRect(0, 0, panelWidth, panelHeight))\n    vibrancy.setBackgroundColor(NSColor.colorWithRed_green_blue_alpha(0.0,0.0,0.0,0.6))\n    vibrancy.setWantsLayer(true)\n\n    superview.addSubview(vibrancy)\n    fitSubviewToView(vibrancy,superview, [0.0,0.0,0.0,0.0])\n\n    var fontWarning = createTextField({\n        text: \"Selected text doesn't contain any supported font features. Please try a different typeface.\",\n        frame: NSMakeRect(0,0,panelWidth,17),\n        alignment: NSTextAlignmentCenter,\n        fontSize: 12\n    })\n    fontWarning.setTextColor(NSColor.whiteColor())\n\n    vibrancy.addSubview(fontWarning)\n    fontWarning.setTranslatesAutoresizingMaskIntoConstraints(false)\n    addEdgeConstraint(NSLayoutAttributeCenterX, fontWarning, vibrancy, 0)\n    addEdgeConstraint(NSLayoutAttributeTop, fontWarning, vibrancy, 40.0)\n    fontWarning.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        fontWarning,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        260\n    ))\n\n    vibrancy.setHidden(true)\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    threadDictionary[vibrancyViewID] = vibrancy\n}\n\nfunction getBlurFilter() {\n    let blurFilter = CIFilter.filterWithName(\"CIGaussianBlur\")\n    blurFilter.setDefaults()\n    blurFilter.setValue_forKey(2, 'inputRadius')\n    blurFilter.setName(\"blur\")\n\n    return blurFilter\n}\n\nfunction fitSubviewToView(subview, view, constants) {\n    subview.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    addEdgeConstraint(NSLayoutAttributeTop, subview, view, constants[0])\n    addEdgeConstraint(NSLayoutAttributeTrailing, subview, view, constants[1])\n    addEdgeConstraint(NSLayoutAttributeBottom, subview, view, constants[2])\n    addEdgeConstraint(NSLayoutAttributeLeading, subview, view, constants[3])\n}\n\nfunction addEdgeConstraint(layoutAttribute, subview, view, constant) {\n    view.addConstraint(\n        NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n                subview,\n                layoutAttribute,\n                NSLayoutRelationEqual,\n                view,\n                layoutAttribute,\n                1.0,\n                constant\n            )\n        )\n}\n\nfunction createTextField({text, frame, alignment, fontSize = 13}) {\n    const label = NSTextField.alloc().initWithFrame(frame)\n    label.setStringValue(text)\n    label.setAlignment(alignment)\n    label.setFont(NSFont.systemFontOfSize(fontSize))\n    label.setBezeled(false)\n    label.setDrawsBackground(false)\n    label.setEditable(false)\n    label.setSelectable(false)\n    return label\n}\n\nfunction updateFontFeatureSettingsAttribute(settingsAttribute) {\n    var document = sketch.getSelectedDocument();\n    var selectedLayers = document.selectedLayers.layers\n    var textLayers = selectedLayers.filter(layer => layer.type == \"Text\")\n\n    textLayers.forEach(textLayer => {\n        let font = textLayer.sketchObject.font()\n        let fontSize = font.pointSize()\n        let fontFeatureSettings = font\n            .fontDescriptor()\n            .fontAttributes()[NSFontFeatureSettingsAttribute]\n        let descriptor = font.fontDescriptor().fontDescriptorByAddingAttributes(settingsAttribute)\n        let newFont = NSFont.fontWithDescriptor_size(descriptor,fontSize)\n        textLayer.sketchObject.setFont(newFont)\n\n        if (textLayer.sketchObject.isEditingText() == 1) {\n            let textView = textLayer.sketchObject.editingDelegate().textView()\n            let textStorage = textView.textStorage()\n            let fonts = getFontsFromTextLayer(textLayer)\n            fonts.forEach(fontWithRange => {\n                let font = fontWithRange.font\n                let range = fontWithRange.range\n                let fontSize = font.pointSize()\n\n                let descriptor = font\n                    .fontDescriptor()\n                    .fontDescriptorByAddingAttributes(settingsAttribute)\n\n                let newFont = NSFont.fontWithDescriptor_size(descriptor,fontSize)\n                let attrsDict = NSDictionary.dictionaryWithObject_forKey(newFont,NSFontAttributeName)\n                textStorage.addAttributes_range(attrsDict,range)\n            })\n            textView.didChangeText()\n        }\n    })\n    document.sketchObject.inspectorController().reload()\n}\n\nfunction getFontForKey_Value(key, value) {\n    let defaultButtonFont = NSFont.boldSystemFontOfSize(13)\n    let settingsAttribute = getSettingsAttributeForKey_Value(key, value)\n    var fontFeatureSettings = defaultButtonFont.fontDescriptor().fontAttributes()[NSFontFeatureSettingsAttribute]\n    const descriptor = defaultButtonFont.fontDescriptor().fontDescriptorByAddingAttributes(settingsAttribute)\n    const newFont = NSFont.fontWithDescriptor_size(descriptor,13)\n    return newFont\n}\n\nfunction getSettingsAttributeForKey_Value(key, value) {\n    let settingsAttribute = {\n        [NSFontFeatureSettingsAttribute]: [{\n            [NSFontFeatureTypeIdentifierKey]: key,\n            [NSFontFeatureSelectorIdentifierKey]: value\n        }]\n    }\n\n    return settingsAttribute\n}\n\nfunction updateUI(useFullSelection = false) {\n    var document = sketch.getSelectedDocument()\n    var selectedLayers = document.selectedLayers.layers\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n\n    let warning = threadDictionary[vibrancyViewID]\n\n    if (selectedLayers == null) {\n        disableUI(threadDictionary)\n        if (!warning.isHidden()) {\n            warning.layer().setBackgroundFilters([])\n            warning.setHidden(true)\n        }\n        return\n    }\n\n    var textLayers = selectedLayers.filter(layer => layer.type == \"Text\")\n    if (textLayers.length == 0) {\n        disableUI(threadDictionary)\n        if (!warning.isHidden()) {\n            warning.layer().setBackgroundFilters([])\n            warning.setHidden(true)\n        }\n        return\n    }\n\n    var textLayersFeatureSettings = []\n\n    let fontSettingsObjects = []\n    textLayers.forEach(textLayer => {\n        let fonts = getFontsFromTextLayer(textLayer, useFullSelection)\n        fonts.forEach(fontWithRange => {\n            checkToShowSFSymbolOption(fontWithRange.font)\n            let currentSettings = getSettingsForFont(fontWithRange.font)\n            fontSettingsObjects.push(currentSettings)\n        })\n    })\n\n\n    // Settings object looks like this\n    //{\n    //    smallCapsLowerCase: true\n    //     smallCapsUpperCase: false\n    //     sfSymbolSize: 'medium'\n    //     numberCase: 'disabled'\n    //     verticalPosition: 'default'\n    //     numberSpacing: 'proportional'\n    // }\n\n    let updatedUISettings = {\n        \"smallCapsLowerCase\": [],\n        \"smallCapsUpperCase\": [],\n        \"sfSymbolSize\": [],\n        \"numberCase\": [],\n        \"verticalPosition\": [],\n        \"numberSpacing\": []\n    }\n    fontSettingsObjects.forEach(fontSetting => {\n        Object.keys(fontSetting).forEach(key => {\n            updatedUISettings[key].push(fontSetting[key])\n        })\n    })\n\n    // Deduplicate settingsCollection to only have unique entries\n    for (var property in updatedUISettings) {\n        updatedUISettings[property] = updatedUISettings[property].filter(onlyUnique)\n    }\n\n    function onlyUnique(value,index,self) {\n        return self.indexOf(value) === index\n    }\n\n    let showWarningMessage = true\n    for (var setting in updatedUISettings) {\n        if (updatedUISettings[setting].length > 1 ) {\n            showWarningMessage = false\n            break;\n        }\n\n        if (updatedUISettings[setting][0] !== \"disabled\") {\n            showWarningMessage = false\n            break;\n        }\n    }\n    if ((showWarningMessage) && (warning.isHidden())) {\n        warning.setHidden(false)\n        warning.layer().setBackgroundFilters([getBlurFilter()])\n    } else if ((!showWarningMessage) && (!warning.isHidden())) {\n        warning.layer().setBackgroundFilters([])\n        warning.setHidden(true)\n    } else if ((showWarningMessage) && (!warning.isHidden())) {\n        logWarning(\"Warning already being shown\")\n    } else {\n        logWarning(\"Warning is already hidden\")\n    }\n\n    //Update UI Panel with only one update (to prevent flickering)\n    for (var uiSetting in updatedUISettings) {\n        if (uiSetting == 'verticalPosition') {\n\n            let verticalPositionPopupButton = threadDictionary[verticalPositionPopupButtonID]\n            verticalPositionPopupButton.setEnabled(true)\n\n            //Clear mixed state items before setting them\n            clearVerticalPositionPopupButtonState()\n\n            if (updatedUISettings[uiSetting].length > 1) {\n                verticalPositionPopupButton.selectItemWithTitle('Multiple')\n\n                updatedUISettings[uiSetting].forEach(verticalPositionSetting => {\n                    if (verticalPositionSetting == 'default') {\n                        verticalPositionPopupButton.itemWithTitle('Default Position').setState(NSControlStateValueMixed)\n                    } else if (verticalPositionSetting == 'superscript') {\n                        verticalPositionPopupButton.itemWithTitle('Superscript').setState(NSControlStateValueMixed)\n                    } else if (verticalPositionSetting == 'subscript') {\n                        verticalPositionPopupButton.itemWithTitle('Subscript').setState(NSControlStateValueMixed)\n                    } else if (verticalPositionSetting == 'ordinals') {\n                        verticalPositionPopupButton.itemWithTitle('Ordinals').setState(NSControlStateValueMixed)\n                    } else if (verticalPositionSetting == 'scientific inferiors') {\n                        verticalPositionPopupButton.itemWithTitle('Scientific Notation').setState(NSControlStateValueMixed)\n                    }\n                })\n            } else {\n                if (updatedUISettings[uiSetting][0] == 'default') {\n                    // console.log('Setting UI: Vertical Position = Default Position')\n                    verticalPositionPopupButton.selectItemWithTitle('Default Position')\n                    verticalPositionPopupButton.itemWithTitle('Default Position').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'superscript') {\n                    // console.log('Setting UI: Vertical Position = Superscript')\n                    verticalPositionPopupButton.selectItemWithTitle('Superscript')\n                    verticalPositionPopupButton.itemWithTitle('Superscript').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'subscript') {\n                    // console.log('Setting UI: Vertical Position = Subscript')\n                    verticalPositionPopupButton.selectItemWithTitle('Subscript')\n                    verticalPositionPopupButton.itemWithTitle('Subscript').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'ordinals') {\n                    // console.log('Setting UI: Vertical Position = Ordinals')\n                    verticalPositionPopupButton.selectItemWithTitle('Ordinals')\n                    verticalPositionPopupButton.itemWithTitle('Ordinals').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'scientific inferiors') {\n                    // console.log('Setting UI: Vertical Position = Scientific Notation')\n                    verticalPositionPopupButton.selectItemWithTitle('Scientific Notation')\n                    verticalPositionPopupButton.itemWithTitle('Scientific Notation').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'disabled') {\n                    verticalPositionPopupButton.setEnabled(false)\n                } else {\n                    logWarning('BetterTypeTool: ERROR Attempting update panel state - Out of scope of verticalPosition options')\n                }\n            }\n\n        } else if (uiSetting == 'numberSpacing') {\n            let radioButtonProportional = threadDictionary[radioButtonProportionalID]\n            let radioButtonMonospacedOrTabular = threadDictionary[radioButtonMonospacedOrTabularID]\n            radioButtonProportional.setEnabled(true)\n            radioButtonMonospacedOrTabular.setEnabled(true)\n\n            if (updatedUISettings[uiSetting].length > 1) {\n                radioButtonProportional.setState(NSOffState)\n                radioButtonMonospacedOrTabular.setState(NSOffState)\n            } else {\n                if (updatedUISettings[uiSetting][0] == 'proportional') {\n                    // console.log('Setting UI: Number Spacing = Proportional')\n                    radioButtonProportional.setState(NSOnState)\n                    radioButtonMonospacedOrTabular.setState(NSOffState)\n                } else if (updatedUISettings[uiSetting][0] == 'monospaced') {\n                    // console.log('Setting UI: Number Spacing == Monospaced/Tabular')\n                    radioButtonProportional.setState(NSOffState)\n                    radioButtonMonospacedOrTabular.setState(NSOnState)\n                } else if (updatedUISettings[uiSetting][0] == 'disabled') {\n                    radioButtonProportional.setState(NSOffState)\n                    radioButtonMonospacedOrTabular.setState(NSOffState)\n                    radioButtonProportional.setEnabled(false)\n                    radioButtonMonospacedOrTabular.setEnabled(false)\n                } else {\n                    logWarning('BetterTypeTool: ERROR Attempting update panel state - Out of scope of numberSpacing options')\n                }\n            }\n\n        } else if (uiSetting == 'numberCase') {\n            let radioButtonLiningFigures = threadDictionary[radioButtonLiningFiguresID]\n            let radioButtonOldStyleFigures = threadDictionary[radioButtonOldStyleFiguresID]\n            radioButtonLiningFigures.setEnabled(true)\n            radioButtonOldStyleFigures.setEnabled(true)\n\n            if (updatedUISettings[uiSetting].length > 1) {\n                radioButtonLiningFigures.setState(NSOffState)\n                radioButtonOldStyleFigures.setState(NSOffState)\n            } else {\n                if (updatedUISettings[uiSetting][0] == 'lining') {\n                    // console.log('Setting UI: Number Case = Lining figures')\n                    radioButtonLiningFigures.setState(NSOnState)\n                    radioButtonOldStyleFigures.setState(NSOffState)\n                } else if (updatedUISettings[uiSetting][0] == 'oldStyle') {\n                    // console.log('Setting UI: Number Case = Old-style figures')\n                    radioButtonLiningFigures.setState(NSOffState)\n                    radioButtonOldStyleFigures.setState(NSOnState)\n                } else if (updatedUISettings[uiSetting][0] == 'disabled') {\n                    radioButtonLiningFigures.setState(NSOffState)\n                    radioButtonOldStyleFigures.setState(NSOffState)\n                    radioButtonLiningFigures.setEnabled(false)\n                    radioButtonOldStyleFigures.setEnabled(false)\n                } else {\n                    logWarning('BetterTypeTool: ERROR Attempting to update panel state - Out of scope of numberCase options')\n                }\n            }\n\n        } else if (uiSetting == 'smallCapsUpperCase') {\n            let pushOnOffButtonUpperCase = threadDictionary[pushOnOffButtonUpperCaseID]\n            pushOnOffButtonUpperCase.setEnabled(true)\n\n            if (updatedUISettings[uiSetting].length > 1) {\n                pushOnOffButtonUpperCase.setState(NSOffState)\n            } else {\n                if (updatedUISettings[uiSetting][0] == false) {\n                    // console.log('Setting UI: Small Caps Upper Case = Off')\n                    pushOnOffButtonUpperCase.setState(NSOffState)\n                } else if (updatedUISettings[uiSetting][0] == true) {\n                    // console.log('Setting UI: Small Caps Upper Case = On')\n                    pushOnOffButtonUpperCase.setState(NSOnState)\n                } else if (updatedUISettings[uiSetting][0] == 'disabled') {\n                    pushOnOffButtonUpperCase.setState(NSOffState)\n                    pushOnOffButtonUpperCase.setEnabled(false)\n                } else {\n                     logWarning('BetterTypeTool: ERROR Attempting to update panel state - Out of scope of smallCapsUpperCase options')\n                }\n            }\n\n        } else if (uiSetting == 'smallCapsLowerCase') {\n            let pushOnOffButtonLowerCase = threadDictionary[pushOnOffButtonLowerCaseID]\n            pushOnOffButtonLowerCase.setEnabled(true)\n\n            if (updatedUISettings[uiSetting].length > 1) {\n                pushOnOffButtonLowerCase.setState(NSOffState)\n            } else {\n                if (updatedUISettings[uiSetting][0] == false) {\n                    // console.log('Setting UI: Small Caps Lower Case = Off')\n                    pushOnOffButtonLowerCase.setState(NSOffState)\n                } else if (updatedUISettings[uiSetting][0] == true) {\n                    // console.log('Setting UI: Small Caps Lower Case = On')\n                    pushOnOffButtonLowerCase.setState(NSOnState)\n                } else if (updatedUISettings[uiSetting][0] == 'disabled') {\n                    pushOnOffButtonLowerCase.setState(NSOffState)\n                    pushOnOffButtonLowerCase.setEnabled(false)\n                } else {\n                    logWarning('BetterTypeTool: ERROR Attempting to update panel state - Out of scope of smallCapsLowerCase options')\n                }\n            }\n\n        } else if (uiSetting == 'sfSymbolSize') {\n            let sfSymbolSizePopupButton = threadDictionary[sfSymbolSizePopupButtonID]\n            sfSymbolSizePopupButton.setEnabled(true)\n\n            clearSFSymbolSizePopupButton()\n\n            if (updatedUISettings[uiSetting].length > 1) {\n                sfSymbolSizePopupButton.selectItemWithTitle('Multiple')\n\n                updatedUISettings[uiSetting].forEach(sfSymbolSizeSetting => {\n                    if (sfSymbolSizeSetting == 'small') {\n                        sfSymbolSizePopupButton.itemWithTitle('Small').setState(NSControlStateValueMixed)\n                    } else if (sfSymbolSizeSetting == 'medium') {\n                        sfSymbolSizePopupButton.itemWithTitle('Medium').setState(NSControlStateValueMixed)\n                    } else if (sfSymbolSizeSetting == 'large') {\n                        sfSymbolSizePopupButton.itemWithTitle('Large').setState(NSControlStateValueMixed)\n                    }\n                })\n            } else {\n                if (updatedUISettings[uiSetting][0] == 'small') {\n                    sfSymbolSizePopupButton.selectItemWithTitle('Small')\n                    sfSymbolSizePopupButton.itemWithTitle('Small').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'medium') {\n                    sfSymbolSizePopupButton.selectItemWithTitle('Medium')\n                    sfSymbolSizePopupButton.itemWithTitle('Medium').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'large'){\n                    sfSymbolSizePopupButton.selectItemWithTitle('Large')\n                    sfSymbolSizePopupButton.itemWithTitle('Large').setState(NSControlStateValueOn)\n                } else if (updatedUISettings[uiSetting][0] == 'disabled') {\n                    sfSymbolSizePopupButton.setEnabled(false)\n                } else {\n                    logWarning('BetterTypeTool: ERROR Attempting update panel state - Out of scope of sfSymbolSize options')\n                }\n            }\n        } else {\n            logWarning('Error: Unhandled uiSetting Property')\n            logWarning(updatedUISettings[uiSetting])\n        }\n    }\n}\n\nfunction disableUI(threadDictionary, optionsToDisableArray = ['all']) {\n    // optionsToDisable is an array that can include \"all\", \"verticalPosition\", \"numberSpacing\", \"numberCase\", \"smallCapsUppercase\", \"smallCapsLowerCase\", \"sfSymbolSize\"\n    //TODO: Maybe reset the state to the deault params when UI is disabled\n\n    if (optionsToDisableArray.includes('all') || optionsToDisableArray.includes('verticalPosition')) {\n        let verticalPositionPopupButton = threadDictionary[verticalPositionPopupButtonID]\n        verticalPositionPopupButton.setEnabled(false)\n    }\n\n    if (optionsToDisableArray.includes('all') || optionsToDisableArray.includes('numberSpacing')) {\n        let radioButtonProportional = threadDictionary[radioButtonProportionalID]\n        let radioButtonMonospacedOrTabular = threadDictionary[radioButtonMonospacedOrTabularID]\n        radioButtonProportional.setEnabled(false)\n        radioButtonMonospacedOrTabular.setEnabled(false)\n    }\n\n    if (optionsToDisableArray.includes('all') || optionsToDisableArray.includes('numberCase')) {\n        let radioButtonLiningFigures = threadDictionary[radioButtonLiningFiguresID]\n        let radioButtonOldStyleFigures = threadDictionary[radioButtonOldStyleFiguresID]\n        radioButtonLiningFigures.setEnabled(false)\n        radioButtonOldStyleFigures.setEnabled(false)\n    }\n\n    if (optionsToDisableArray.includes('all') || optionsToDisableArray.includes('smallCapsUpperCase')) {\n        let pushOnOffButtonUpperCase = threadDictionary[pushOnOffButtonUpperCaseID]\n        pushOnOffButtonUpperCase.setEnabled(false)\n    }\n\n    if (optionsToDisableArray.includes('all') || optionsToDisableArray.includes('smallCapsLowerCase')) {\n        let pushOnOffButtonLowerCase = threadDictionary[pushOnOffButtonLowerCaseID]\n        pushOnOffButtonLowerCase.setEnabled(false)\n    }\n\n    if (optionsToDisableArray.includes('all') || optionsToDisableArray.includes('sfSymbolSize')) {\n        let sfSymbolSizePopupButton = threadDictionary[sfSymbolSizePopupButtonID]\n        sfSymbolSizePopupButton.setEnabled(false)\n    }\n}\n\nfunction closePanel(panel, threadDictionary, threadIdentifier) {\n        panel.close()\n\n        try {\n            setupFramework()\n            let main = HSMain.alloc().init()\n            // Stop text selection listening\n            main.stopObservingTextViewSelectionChanges()\n        } catch(error) {\n            console.log(error);\n        }\n\n        // Remove the reference to the panel\n        threadDictionary.removeObjectForKey(threadIdentifier)\n        threadDictionary.panelOpen = false\n\n        // Stop this script\n        COScript.currentCOScript().setShouldKeepAround_(false)\n}\n\n    //Start with Default Settings\nfunction getDefaultUISettings() {\n    return {\n        'verticalPosition': 'default', // 'default', 'superscript', 'subscript', 'ordinals', 'scientific inferiors', 'disabled'\n        'numberSpacing': 'proportional', // 'proportional', 'monospaced', 'disabled'\n        'numberCase': 'lining', // 'lining', 'oldStyle', 'disabled'\n        'smallCapsLowerCase': false, // bool, 'disabled'\n        'smallCapsUpperCase': false, // bool, 'disabled'\n        'sfSymbolSize': 'medium' // 'small', 'medium', 'large', 'disabled'\n        // If updating this list remember to update the default updatedUISettings\n        // TODO: Refactor so that the Default UI settings is in one place.\n    }\n}\n\n// TODO: Make more generic to support both popupbuttons\nfunction clearVerticalPositionPopupButtonState() {\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    let verticalPositionPopupButton = threadDictionary[verticalPositionPopupButtonID]\n    verticalPositionPopupButton.itemWithTitle('Default Position').setState(NSControlStateValueOff)\n    verticalPositionPopupButton.itemWithTitle('Superscript').setState(NSControlStateValueOff)\n    verticalPositionPopupButton.itemWithTitle('Subscript').setState(NSControlStateValueOff)\n    verticalPositionPopupButton.itemWithTitle('Ordinals').setState(NSControlStateValueOff)\n    verticalPositionPopupButton.itemWithTitle('Scientific Notation').setState(NSControlStateValueOff)\n}\n\nfunction clearSFSymbolSizePopupButton() {\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    let sfSymbolSizePopupButton = threadDictionary[sfSymbolSizePopupButtonID]\n    sfSymbolSizePopupButton.itemWithTitle('Small').setState(NSControlStateValueOff)\n    sfSymbolSizePopupButton.itemWithTitle('Medium').setState(NSControlStateValueOff)\n    sfSymbolSizePopupButton.itemWithTitle('Large').setState(NSControlStateValueOff)\n}\n\nfunction logWarning(warning) {\n    //console.log(warning)\n}\n\nfunction getFontsFromTextLayer(textLayer, useFullSelection = false) {\n    let msTextLayer = textLayer.sketchObject\n    let effectiveRange = MOPointer.alloc().init()\n\n    // if editing text then need to use the textStorage rather than the attrString\n    let mutableAttrString\n    let selectedRange\n    let textView\n\n    // infer editing by checking if textView exists\n    let textViewExists = true\n    try {\n        textView = msTextLayer.editingDelegate().textView()\n    } catch {\n        textViewExists = false\n    }\n\n    if (textViewExists) {\n        let textStorage = textView.textStorage()\n        selectedRange = textView.selectedRange()\n        mutableAttrString = textStorage\n\n        // need this because selected range is 0 when going from editing state to selected frame state\n        if (useFullSelection) {\n            selectedRange = NSMakeRange(0,textLayer.text.length)\n        }\n    } else {\n        let attributedString = msTextLayer.attributedStringValue()\n        selectedRange = NSMakeRange(0,textLayer.text.length)\n        mutableAttrString = attributedString\n    }\n\n    let fonts = []\n\n    if (selectedRange.length == 0) {\n        let font = mutableAttrString.attribute_atIndex_longestEffectiveRange_inRange(\n            NSFontAttributeName,\n            selectedRange.location,\n            effectiveRange,\n            selectedRange\n        )\n        fonts.push({\"font\": font, \"range\": effectiveRange.value()})\n    }\n\n    while (selectedRange.length > 0) {\n        let font = mutableAttrString.attribute_atIndex_longestEffectiveRange_inRange(\n            NSFontAttributeName,\n            selectedRange.location,\n            effectiveRange,\n            selectedRange\n        )\n        selectedRange = NSMakeRange(\n            NSMaxRange(effectiveRange.value()),\n            NSMaxRange(selectedRange) - NSMaxRange(effectiveRange.value())\n        )\n\n        fonts.push({\"font\": font, \"range\": effectiveRange.value()})\n    }\n    return fonts\n}\n\nfunction checkToShowSFSymbolOption(font) {\n    let familyName = font.familyName()\n    let showSFSymbolOption = false\n\n    let supportedFontFamilies = [\n        \"SF Pro Text\",\n        \"SF Pro Rounded\",\n        \"SF Pro Display\",\n        \"SF Compact Text\",\n        \"SF Compact Rounded\",\n        \"SF Compact Display\"\n    ]\n\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    let row5 = threadDictionary[sfSymbolSizeRow]\n    let panel = threadDictionary[threadIdentifier]\n    let panelX = panel.frame().origin.x\n    let panelY = panel.frame().origin.y\n    let panelWidth = panel.frame().size.height\n    let panelHeight = panel.frame().size.height\n    supportedFontFamilies.forEach(fontFamily => {\n        if (familyName == fontFamily) {\n            showSFSymbolOption = true\n            // TODO Don't hard code these values\n            if (panelHeight != 235) {\n                panel.setFrame_display_animate(NSMakeRect(panelX, panelY - 25, 312, 210 + 25), true, true)\n                row5.setHidden(false)\n            }\n            return;\n        }\n    })\n\n    if (!showSFSymbolOption) {\n        // hide UI\n        if (panelHeight != 210) {\n            row5.setHidden(true)\n            panel.setFrame_display_animate(NSMakeRect(panelX, panelY + 25, 312, 210), true, true)\n        }\n    }\n}\n\nfunction getOptionsToDisableFromFont(font) {\n    framework('CoreText')\n    console.log(\"Attempting to setup framework in getOptionsToDisableFromFont\")\n    setupFramework()\n    let main = HSMain.alloc().init()\n\n    const coreTextFont = CTFontCreateWithName(font.fontName(), font.pointSize(), null)\n    const features = CTFontCopyFeatures(coreTextFont)\n    let featuresArray = main.bridgeArray(features)\n\n    let optionsToDisableForFont = getOptionsToDisableFromFeaturesArray(featuresArray)\n\n    let familyName = font.familyName().toLowerCase().trim()\n    let supportedFontFamilies = [\n        \"sf pro text\",\n        \"sf pro rounded\",\n        \"sf pro display\",\n        \"sf compact text\",\n        \"sf compact rounded\",\n        \"sf compact display\"\n    ]\n    if (!supportedFontFamilies.includes(familyName)) {\n        optionsToDisableForFont.push('sfSymbolSize')\n    }\n\n    return optionsToDisableForFont\n}\n\nfunction getOptionsToDisableFromFeaturesArray(featuresArray) {\n    let optionsToDisableForFont = []\n\n    if(!featuresArray) {\n        optionsToDisableForFont.push('verticalPosition','numberSpacing','numberCase', 'smallCapsLowerCase', 'smallCapsUpperCase')\n    } else {\n        let featureIDs = []\n        featuresArray.forEach(feature => {\n            featureIDs.push(Number(feature[\"CTFeatureTypeIdentifier\"]))\n        })\n\n        if (!featureIDs.includes(10)) {\n            // Vertical Position\n            optionsToDisableForFont.push('verticalPosition')\n        }\n        if (!featureIDs.includes(6)) {\n            // Number Spacing\n            optionsToDisableForFont.push('numberSpacing')\n        }\n        if (!featureIDs.includes(21)) {\n            // Number Case\n            optionsToDisableForFont.push('numberCase')\n        }\n        if (!featureIDs.includes(37)) {\n            // Small Caps Lower Case\n            optionsToDisableForFont.push('smallCapsLowerCase')\n        }\n        if (!featureIDs.includes(38)) {\n            // Small Caps Upper Case\n            optionsToDisableForFont.push('smallCapsUpperCase')\n        }\n    }\n    return optionsToDisableForFont\n}\n\nfunction getSettingsForFont(font) {\n    let currentOptions = getDefaultUISettings()\n    let disableOptions = getOptionsToDisableFromFont(font)\n\n    disableOptions.forEach(option => {\n        switch (option) {\n            case \"verticalPosition\":\n                currentOptions.verticalPosition = \"disabled\"\n                break;\n            case \"numberSpacing\":\n                currentOptions.numberSpacing = \"disabled\"\n                break;\n            case \"numberCase\":\n                currentOptions.numberCase = \"disabled\"\n                break;\n            case \"smallCapsLowerCase\":\n                currentOptions.smallCapsLowerCase = \"disabled\"\n                break;\n            case \"smallCapsUpperCase\":\n                currentOptions.smallCapsUpperCase = \"disabled\"\n                break;\n            case \"sfSymbolSize\":\n                currentOptions.sfSymbolSize = \"disabled\"\n                break;\n        }\n    })\n\n    let fontFeatureSettings = font.fontDescriptor().fontAttributes()[NSFontFeatureSettingsAttribute]\n    if (fontFeatureSettings) {\n        fontFeatureSettings.forEach(featureSetting => {\n            const featureTypeIdentifierKey = Number(featureSetting[NSFontFeatureTypeIdentifierKey])\n            const featureSelectorIdentifierKey = Number(featureSetting[NSFontFeatureSelectorIdentifierKey])\n\n            switch (featureTypeIdentifierKey) {\n                // kVerticalPosition\n                case 10:\n                    switch (featureSelectorIdentifierKey) {\n                        // kNormalPositionSelector\n                        case 0:\n                            currentOptions.verticalPosition = 'default'\n                            break;\n\n                        // kSuperiorsSelector\n                        case 1:\n                            currentOptions.verticalPosition = 'superscript'\n                            break;\n\n                        // kInferiorsSelector\n                        case 2:\n                            currentOptions.verticalPosition = 'subscript'\n                            break;\n\n                        // kOrdinalsSelector\n                        case 3:\n                            currentOptions.verticalPosition = 'ordinals'\n                            break;\n\n                        // kScientificInferiorsSelector\n                        case 4:\n                            currentOptions.verticalPosition = 'scientific inferiors'\n                            break;\n\n                        default:\n                            logWarning(\"BetterTypeTool: Unknown Feature for Vertical Position\")\n                            break;\n                    }\n                    break;\n\n                // kNumberSpacing\n                case 6:\n                    switch(featureSelectorIdentifierKey) {\n                        // kMonospacedNumbersSelector\n                        case 0:\n                            currentOptions.numberSpacing = 'monospaced'\n                            break;\n\n                        // kProportionalNumbersSelector\n                        case 1:\n                            currentOptions.numberSpacing = 'proportional'\n                            break;\n\n                        // kThirdWidthNumbersSelector\n                        case 2:\n                            logWarning(\"BetterTypeTool: Unsupported Number Spacing Feature - Third-width Numerals (Thin numerals)\")\n                            break;\n\n                        // kQuarterWidthNumbersSelector\n                        case 3:\n                            logWarning(\"BetterTypeTool: Unsupported Number Spacing Feature - Quarter-width Numerals (Very Yhin Numerals\")\n                            break;\n\n                        default:\n                            logWarning(\"BetterTypeTool: Unknown feature for Number Spacing\")\n                            break;\n                    }\n                    break;\n\n                // kNumberCaseType\n                case 21:\n                    switch(featureSelectorIdentifierKey) {\n                        // kLowerCaseNumbersSelector\n                        case 0:\n                            currentOptions.numberCase = 'oldStyle'\n                            break;\n\n                        // kUpperCaseNumbersSelector\n                        case 1:\n                            currentOptions.numberCase = 'lining'\n                            break;\n\n                        default:\n                            logWarning(\"BetterTypeTool: Unknown feature for Number Case\")\n                            break;\n                    }\n                    break;\n\n                // kLowerCase\n                case 37:\n                    switch(featureSelectorIdentifierKey) {\n                        // kDefaultLowerCaseSelector (aka OFF)\n                        case 0:\n                            currentOptions.smallCapsLowerCase = false\n                            break;\n\n                        // kLowerCaseSmallCapsSelector\n                        case 1:\n                            currentOptions.smallCapsLowerCase = true\n                            break;\n\n                        // kLowerCasePetiteCapsSelector\n                        case 2:\n                            logWarning(\"Unsupported Lower Case Small Caps Feature - Lower Case Petite Caps\")\n                            break;\n\n                        default:\n                            logWarning(\"BetterTypeTool: Unknown feature for Lower Case Small Caps\")\n                            break;\n                    }\n                    break;\n\n                // kUpperCase\n                case 38:\n                    switch(featureSelectorIdentifierKey) {\n                        // kDefaultUpperCaseSelector (aka OFF)\n                        case 0:\n                            currentOptions.smallCapsUpperCase = false\n                            break;\n\n                        // kUpperCaseSmallCapsSelector\n                        case 1:\n                            currentOptions.smallCapsUpperCase = true\n                            break;\n\n                        // kUpperCasePetiteCapsSelector\n                        case 2:\n                            logWarning(\"Unsupported Upper Case Small Caps Feature - Upper Case Petite Caps\")\n                            break;\n\n                        default:\n                            logWarning(\"BetterTypeTool: Unknown feature for Upper Case Small Caps\")\n                            break;\n                    }\n                    break;\n\n\n                // kStylisticAlternatives\n                case 35:\n                    switch(featureSelectorIdentifierKey) {\n                        // kStylisticAltFifteenOnSelector\n                        case 30:\n                            currentOptions.sfSymbolSize = 'small'\n                            break;\n\n                        // kStylisticAltFifteenOffSelector\n                        case 31:\n                            logWarning(\"WARNING: Unhandled Attempt to Set 15th Stylistic Alternative off\")\n                            break;\n\n                        // kStylisticAltSixteenOnSelector\n                        case 32:\n                            currentOptions.sfSymbolSize = 'large'\n                            break;\n\n                        // kStylisticAltSixteenOffSelector\n                        case 33:\n                            logWarning(\"WARNING: Unhandled Attempt to Set 16th Stylistic Alternative off\")\n                            break;\n                    }\n                    break;\n            }\n        })\n    }\n\n    return currentOptions\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}