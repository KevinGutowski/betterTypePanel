{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/my-command.js","webpack://exports/external \"sketch\""],"names":["COScript","currentCOScript","setShouldKeepAround_","threadIdentifier","verticalPositionPopupButtonID","radioButtonProportionalID","radioButtonMonospacedOrTabularID","pushOnOffButtonLowerCaseID","pushOnOffButtonUpperCaseID","radioButtonLiningFiguresID","radioButtonOldStyleFiguresID","runPanel","setupFramework","framework","updateUI","selectionChanged","context","threadDictionary","NSThread","mainThread","scriptPath","env","scriptURL","path","HelloSketch_FrameworkPath","stringByDeletingLastPathComponent","HelloSketch_Log","log","mocha","Mocha","sharedRuntime","frameworkName","directory","valueForKey","loadFrameworkWithName_inDirectory","setValue_forKey_","determineProps","featuresArray","closePanel","panelOpen","setupPanel","identifier","panelWidth","panelHeight","panel","NSPanel","alloc","init","setFrame_display","NSMakeRect","setStyleMask","NSTexturedBackgroundWindowMask","NSTitledWindowMask","NSClosableWindowMask","title","center","makeKeyAndOrderFront","setLevel","NSFloatingWindowLevel","standardWindowButton","NSWindowMiniaturizeButton","setHidden","NSWindowZoomButton","column1width","column2width","columnSpacing","rowSpacing","mainViewWidth","verticalPositionLabel","createTextField","text","frame","alignment","NSTextAlignmentRight","addConstraint","NSLayoutConstraint","constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant","NSLayoutAttributeWidth","NSLayoutRelationEqual","nil","NSLayoutAttributeNotAnAttribute","verticalPositionPopupButton","NSPopUpButton","initWithFrame","addItemsWithTitles","verticalPositionTargetFuntion","sender","settingsAttribute","getSettingsAttributeForKey_Value","kVerticalPositionType","kSuperiorsSelector","updateFontFeatureSettingsAttribute","kInferiorsSelector","kOrdinalsSelector","kNormalPositionSelector","setCOSJSTargetFunction","row1","NSStackView","setOrientation","NSUserInterfaceLayoutOrientationHorizontal","setAlignment","NSLayoutAttributeFirstBaseline","setSpacing","setViews_inGravity","NSStackViewGravityLeading","numberSpacingLabel","radioButtonProportional","NSButton","setButtonType","NSRadioButton","setTitle","setState","NSOnState","radioButtonMonospacedOrTabular","NSOffState","numberSpacingTargetFunction","kNumberSpacingType","kProportionalNumbersSelector","kMonospacedNumbersSelector","numberSpacingRadioGroupStackView","stackViewWithViews","NSUserInterfaceLayoutOrientationVertical","NSLayoutAttributeLeading","setTranslatesAutoresizingMaskIntoConstraints","row2","numberCaseLabel","radioButtonLiningFigures","radioButtonOldStyleFigures","numberCaseTargetFunction","kNumberCaseType","kLowerCaseNumbersSelector","kUpperCaseNumbersSelector","numberCaseRadioGroupStackView","row3","smallCapsLabel","smallCapsExampleLabel","NSTextAlignmentLeft","pushOnOffButtonLowerCase","NSButtonTypeOnOff","setBezelStyle","NSRoundedBezelStyle","lowerCaseAttributedString","NSMutableAttributedString","new","initWithString","lowerCaseRange","NSMakeRange","lowerCaseFont","getFontForKey_Value","addAttribute_value_range","NSFontAttributeName","fixAttributesInRange","setAttributedTitle","smallCapsLowerCaseTargetFunction","state","kLowerCaseType","kDefaultLowerCaseSelector","kLowerCaseSmallCapsSelector","lowerCaseLabel","NSTextAlignmentCenter","fontSize","lowerCaseStackView","NSLayoutAttributeCenterX","pushOnOffButtonUpperCase","upperCaseAttributedString","upperCaseRange","upperCaseFont","smallCapsUpperCaseTargetFunction","kUpperCaseType","kDefaultUpperCaseSelector","kUpperCaseSmallCapsSelector","upperCaseLabel","upperCaseStackView","smallCapsButtonGroupStackView","row4","mainContentView","contentView","addSubview","setFlipped","fitSubviewToView","closeButton","NSWindowCloseButton","addVibrancyView","superview","vibrancy","NSVisualEffectView","setAppearance","NSAppearance","appearanceNamed","NSAppearanceNameVibrantLight","setBlendingMode","NSVisualEffectBlendingModeBehindWindow","subview","view","constants","addEdgeConstraint","NSLayoutAttributeTop","NSLayoutAttributeTrailing","NSLayoutAttributeBottom","layoutAttribute","constant","label","NSTextField","setStringValue","setFont","NSFont","systemFontOfSize","setBezeled","setDrawsBackground","setEditable","setSelectable","document","sketch","getSelectedDocument","textLayer","selectedLayers","layers","font","sketchObject","pointSize","fontFeatureSettings","fontDescriptor","fontAttributes","NSFontFeatureSettingsAttribute","descriptor","fontDescriptorByAddingAttributes","newFont","fontWithDescriptor_size","isEditingText","console","textStorage","editingDelegate","beginEditing","setAttributes_range","endEditing","inspectorController","reload","key","value","defaultButtonFont","boldSystemFontOfSize","NSFontFeatureTypeIdentifierKey","NSFontFeatureSelectorIdentifierKey","disableUI","defaultUISettings","updatedUISettings","modifyUISettings","uiSetting","setEnabled","selectItemWithTitle","uiSettings","forEach","featureSetting","featureTypeIdentifierKey","featureSelectorIdentifierKey","verticalPosition","numberSpacing","numberCase","smallCapsLowerCase","smallCapsUpperCase","close","removeObjectForKey"],"mappings":"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","file":"my-command.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/my-command.js\");\n","import sketch from 'sketch'\n// Documentation:\n// https://developer.sketchapp.com/reference/api/\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n\nCOScript.currentCOScript().setShouldKeepAround_(true)\n\nlet threadIdentifier = \"com.betterTypePanel\"\nlet verticalPositionPopupButtonID = \"com.betterTypePanel.popupButton.verticalPosition\"\nlet radioButtonProportionalID = \"com.betterTypePanel.radioButton.proportional\"\nlet radioButtonMonospacedOrTabularID = \"com.betterTypePanel.radioButton.monospaced\"\nlet pushOnOffButtonLowerCaseID = \"com.betterTypePanel.button.lowerCase\"\nlet pushOnOffButtonUpperCaseID = \"com.betterTypePanel.button.upperCase\"\nlet radioButtonLiningFiguresID = \"com.betterTypePanel.radioButton.liningFigures\"\nlet radioButtonOldStyleFiguresID = \"com.betterTypePanel.radioButton.oldStyle\"\n\nexport default function() {\n    runPanel()\n\n    setupFramework()\n    framework(\"CoreText\");\n    // const document = sketch.getSelectedDocument();\n    // const textLayer = document.selectedLayers.layers[0]\n    // const font = textLayer.sketchObject.font()\n    // const coreTextFont = CTFontCreateWithName(font.fontName(), font.pointSize(), nil);\n    // const features = CTFontCopyFeatures(coreTextFont)\n    // const settings = CTFontCopyFeatureSettings(coreTextFont)\n\n    // var main = HSMain.alloc().init()\n    // var featuresArray = main.bridgeArray(features)\n    // var settingsArray = main.bridgeArray(settings)\n\n    //determineProps(featuresArray);\n\n    updateUI()\n}\n\nexport function selectionChanged(context) {\n    framework(\"CoreText\");\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    // check if the panel is open, if open update UI, else just do nothing\n    if (threadDictionary[threadIdentifier]) {\n        updateUI()\n    } else {\n        return\n    }\n}\n\nfunction setupFramework() {\n    // var HelloSketch_FrameworkPath = HelloSketch_FrameworkPath || COScript.currentCOScript().env().scriptURL.path().stringByDeletingLastPathComponent();\n    var scriptPath = COScript.currentCOScript().env().scriptURL.path()\n    var HelloSketch_FrameworkPath = scriptPath\n        .stringByDeletingLastPathComponent()\n        .stringByDeletingLastPathComponent()\n        .stringByDeletingLastPathComponent()\n        .stringByDeletingLastPathComponent()\n        + \"/src\";\n    var HelloSketch_Log = HelloSketch_Log || log;\n    (function() {\n        var mocha = Mocha.sharedRuntime();\n        var frameworkName = \"HelloSketch\";\n        var directory = HelloSketch_FrameworkPath;\n        if (mocha.valueForKey(frameworkName)) {\n            // HelloSketch_Log(\"😎 loadFramework: `\" + frameworkName + \"` already loaded.\");\n            return true;\n        } else if (mocha.loadFrameworkWithName_inDirectory(frameworkName, directory)) {\n            // HelloSketch_Log(\"✅ loadFramework: `\" + frameworkName + \"` success!\");\n            mocha.setValue_forKey_(true, frameworkName);\n            return true;\n        } else {\n            // HelloSketch_Log(\"❌ loadFramework: `\" + frameworkName + \"` failed!: \" + directory + \". Please define HelloSketch_FrameworkPath if you're trying to @import in a custom plugin\");\n            return false;\n        }\n    })();\n}\n\nfunction determineProps(featuresArray) {\n\n}\n\nfunction runPanel() {\n    // console.log(\"Setting Up Panel\")\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n\n    // If there is already a panel, prevent the plugin from running again\n    if (threadDictionary[threadIdentifier]) {\n        closePanel(threadDictionary[threadIdentifier], threadDictionary, threadIdentifier)\n    } else {\n        threadDictionary.panelOpen = true\n        setupPanel(threadDictionary, threadIdentifier)\n    }\n\n}\n\nfunction setupPanel(threadDictionary, identifier) {\n    var panelWidth = 312\n    var panelHeight = 210\n    let panel = NSPanel.alloc().init()\n    panel.setFrame_display(NSMakeRect(0, 0, panelWidth, panelHeight), true)\n    panel.setStyleMask(NSTexturedBackgroundWindowMask | NSTitledWindowMask | NSClosableWindowMask)\n    // panel.setBackgroundColor(NSColor.whiteColor());\n    panel.title = \"betterTypePanel\"\n\n    panel.center()\n    panel.makeKeyAndOrderFront(null)\n    panel.setLevel(NSFloatingWindowLevel)\n\n    panel.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true)\n    panel.standardWindowButton(NSWindowZoomButton).setHidden(true)\n\n\n    const column1width = 109\n    const column2width = 171\n    const columnSpacing = 4\n    const rowSpacing = 8\n    const mainViewWidth = column1width + column2width + columnSpacing\n\n    // MARK: SETUP ROW 1\n    var verticalPositionLabel = createTextField({\n        text: \"Vertical Position:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    verticalPositionLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        verticalPositionLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    var verticalPositionPopupButton = NSPopUpButton.alloc().initWithFrame(NSMakeRect(0,0,150,25))\n    verticalPositionPopupButton.addItemsWithTitles([\n        'Default Position',\n        'Superscript',\n        'Subscript',\n        'Ordinals',\n        'Scientific Notation'\n    ])\n\n    threadDictionary[verticalPositionPopupButtonID] = verticalPositionPopupButton\n\n    let verticalPositionTargetFuntion = (sender) => {\n        // console.log(sender.title() + ' dropdown button was selected')\n        // Vertical Position\n        // ID: kVerticalPositionType\n        //\n        // Selectors\n        //\n        // kNormalPositionSelector\n        // This is the default. It means to display the text with no vertical displacement.\n        //\n        // kSuperiorsSelector\n        // Changes any characters having superior forms in the font into those forms.\n        //\n        // kInferiorsSelector\n        // Changes any characters having inferior forms in the font into those forms.\n        //\n        // kOrdinalsSelector\n        // Contextually changes certain letters into their superior forms, like in Spanish changing from 1a to 1ª.\n        //\n        // kScientificInferiorsSelector\n        // Changes any characters having them into inferior forms designed for a technical context (as in H2O).\n        //\n        if (sender.title() == 'Superscript') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kSuperiorsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else if (sender.title() == 'Subscript') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kInferiorsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else if (sender.title() == 'Ordinals') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kOrdinalsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else if (sender.title() == 'Scientific Notation') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kOrdinalsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kVerticalPositionType, kNormalPositionSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n\n    verticalPositionPopupButton.setCOSJSTargetFunction(sender => verticalPositionTargetFuntion(sender))\n\n    var row1 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,25))\n    row1.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row1.setAlignment(NSLayoutAttributeFirstBaseline)\n    row1.setSpacing(columnSpacing)\n    row1.setViews_inGravity([verticalPositionLabel,verticalPositionPopupButton],NSStackViewGravityLeading)\n\n    // MARK: Setup Row 2\n    var numberSpacingLabel = createTextField({\n        text: \"Number Spacing:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    numberSpacingLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        numberSpacingLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    let radioButtonProportional = NSButton.alloc().initWithFrame(NSMakeRect(0,0,97,18))\n    radioButtonProportional.setButtonType(NSRadioButton)\n    radioButtonProportional.setTitle('Proportional')\n    radioButtonProportional.setState(NSOnState)\n\n    threadDictionary[radioButtonProportionalID] = radioButtonProportional\n\n    let radioButtonMonospacedOrTabular = NSButton.alloc().initWithFrame(NSMakeRect(0,0,150,18))\n    radioButtonMonospacedOrTabular.setButtonType(NSRadioButton)\n    radioButtonMonospacedOrTabular.setTitle('Monospaced/Tabular')\n    radioButtonMonospacedOrTabular.setState(NSOffState)\n\n    threadDictionary[radioButtonMonospacedOrTabularID] = radioButtonMonospacedOrTabular\n\n    let numberSpacingTargetFunction = (sender) => {\n        // console.log(sender.title() + ' radio button was clicked')\n\n        if (sender.title() == 'Proportional') {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberSpacingType, kProportionalNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberSpacingType, kMonospacedNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n\n    radioButtonProportional.setCOSJSTargetFunction(sender => numberSpacingTargetFunction(sender))\n    radioButtonMonospacedOrTabular.setCOSJSTargetFunction(sender => numberSpacingTargetFunction(sender))\n\n    var numberSpacingRadioGroupStackView = NSStackView.stackViewWithViews([radioButtonProportional, radioButtonMonospacedOrTabular])\n    numberSpacingRadioGroupStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    numberSpacingRadioGroupStackView.setAlignment(NSLayoutAttributeLeading)\n    numberSpacingRadioGroupStackView.setSpacing(4)\n    numberSpacingRadioGroupStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var row2 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,36))\n    row2.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row2.setAlignment(NSLayoutAttributeFirstBaseline)\n    row2.setSpacing(columnSpacing)\n    row2.setViews_inGravity([numberSpacingLabel, numberSpacingRadioGroupStackView], NSStackViewGravityLeading)\n\n    // MARK: Setup Row 3\n    var numberCaseLabel = createTextField({\n        text: \"Number Case:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    numberCaseLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        numberCaseLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    var radioButtonLiningFigures = NSButton.alloc().initWithFrame(NSMakeRect(0,0,104,17))\n    radioButtonLiningFigures.setButtonType(NSRadioButton)\n    radioButtonLiningFigures.setTitle('Lining figures')\n    radioButtonLiningFigures.setState(NSOnState)\n\n    threadDictionary[radioButtonLiningFiguresID] = radioButtonLiningFigures\n\n    var radioButtonOldStyleFigures = NSButton.alloc().initWithFrame(NSMakeRect(0,0,124,18))\n    radioButtonOldStyleFigures.setButtonType(NSRadioButton)\n    radioButtonOldStyleFigures.setTitle('Old-style figures')\n    radioButtonOldStyleFigures.setState(NSOffState)\n\n    threadDictionary[radioButtonOldStyleFiguresID] = radioButtonOldStyleFigures\n\n    let numberCaseTargetFunction = (sender) => {\n        // console.log(sender.title() + ' radio button was clicked')\n\n        if (sender.title() == \"Old-style figures\") {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberCaseType, kLowerCaseNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kNumberCaseType, kUpperCaseNumbersSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n\n    radioButtonLiningFigures.setCOSJSTargetFunction(sender => numberCaseTargetFunction(sender))\n    radioButtonOldStyleFigures.setCOSJSTargetFunction(sender => numberCaseTargetFunction(sender))\n\n    var numberCaseRadioGroupStackView = NSStackView.stackViewWithViews([radioButtonLiningFigures,radioButtonOldStyleFigures])\n    numberCaseRadioGroupStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    numberCaseRadioGroupStackView.setAlignment(NSLayoutAttributeLeading)\n    numberCaseRadioGroupStackView.setSpacing(4)\n    numberCaseRadioGroupStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var row3 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,36))\n    row3.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row3.setAlignment(NSLayoutAttributeFirstBaseline)\n    row3.setSpacing(columnSpacing)\n    row3.setViews_inGravity([numberCaseLabel, numberCaseRadioGroupStackView], NSStackViewGravityLeading)\n\n    // MARK: Setup Row 4\n    var smallCapsLabel = createTextField({\n        text: \"Small Caps:\",\n        frame: NSMakeRect(0,0,column1width,17),\n        alignment: NSTextAlignmentRight\n    })\n\n    smallCapsLabel.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        smallCapsLabel,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        column1width\n    ))\n\n    var smallCapsExampleLabel = createTextField({\n        text: \"Tt →\",\n        frame: NSMakeRect(0,0,32,17),\n        alignment: NSTextAlignmentLeft,\n    })\n\n    var pushOnOffButtonLowerCase = NSButton.alloc().initWithFrame(NSMakeRect(0,0,72,32))\n    pushOnOffButtonLowerCase.setButtonType(NSButtonTypeOnOff)\n    pushOnOffButtonLowerCase.setBezelStyle(NSRoundedBezelStyle)\n\n    let lowerCaseAttributedString = NSMutableAttributedString.new().initWithString(\"Tt\")\n    let lowerCaseRange = NSMakeRange(1,1)\n    let lowerCaseFont = getFontForKey_Value(37,1)\n    lowerCaseAttributedString.addAttribute_value_range(NSFontAttributeName,lowerCaseFont,lowerCaseRange)\n    lowerCaseAttributedString.fixAttributesInRange(lowerCaseRange)\n    pushOnOffButtonLowerCase.setAttributedTitle(lowerCaseAttributedString)\n    pushOnOffButtonLowerCase.setState(NSOffState)\n\n    pushOnOffButtonLowerCase.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        pushOnOffButtonLowerCase,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        60\n    ))\n\n    threadDictionary[pushOnOffButtonLowerCaseID] = pushOnOffButtonLowerCase\n\n    let smallCapsLowerCaseTargetFunction = (sender) => {\n        // console.log(sender.title() + ' toggle was clicked')\n        // Small Caps Lower Case\n        // ID: kLowerCaseType\n        //\n        // SELECTORS\n        // kDefaultLowerCaseSelector = 0\n        // Use standard lower-case glyphs\n        //\n        // kLowerCaseSmallCapsSelector = 1\n        // Display lower-case glyphs as small caps. (This is the most common way of displaying small caps.)\n        //\n        // kLowerCasePetiteCapsSelector = 2\n        // Display lower-case glyphs as petite caps\n        //\n        if (sender.state() == 0) {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kLowerCaseType, kDefaultLowerCaseSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kLowerCaseType, kLowerCaseSmallCapsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n    pushOnOffButtonLowerCase.setCOSJSTargetFunction(sender => smallCapsLowerCaseTargetFunction(sender))\n\n    var lowerCaseLabel = createTextField({\n        text: \"Lower Case\",\n        frame: NSMakeRect(0,0,65,14),\n        alignment: NSTextAlignmentCenter,\n        fontSize: 11\n    })\n\n    var lowerCaseStackView = NSStackView.stackViewWithViews([pushOnOffButtonLowerCase,lowerCaseLabel])\n    lowerCaseStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    lowerCaseStackView.setAlignment(NSLayoutAttributeCenterX)\n    lowerCaseStackView.setSpacing(4)\n    lowerCaseStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var pushOnOffButtonUpperCase = NSButton.alloc().initWithFrame(NSMakeRect(0,0,72,32))\n    pushOnOffButtonUpperCase.setButtonType(NSButtonTypeOnOff)\n    pushOnOffButtonUpperCase.setBezelStyle(NSRoundedBezelStyle)\n\n    let upperCaseAttributedString = NSMutableAttributedString.new().initWithString(\"Tt\")\n    let upperCaseRange = NSMakeRange(0,1)\n    let upperCaseFont = getFontForKey_Value(38,1)\n    upperCaseAttributedString.addAttribute_value_range(NSFontAttributeName, upperCaseFont, upperCaseRange)\n    upperCaseAttributedString.fixAttributesInRange(upperCaseRange)\n    pushOnOffButtonUpperCase.setAttributedTitle(upperCaseAttributedString)\n    pushOnOffButtonUpperCase.setState(NSOffState)\n\n    pushOnOffButtonUpperCase.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n        pushOnOffButtonUpperCase,\n        NSLayoutAttributeWidth,\n        NSLayoutRelationEqual,\n        nil,\n        NSLayoutAttributeNotAnAttribute,\n        1.0,\n        60\n    ))\n\n    threadDictionary[pushOnOffButtonUpperCaseID] = pushOnOffButtonUpperCase\n\n    let smallCapsUpperCaseTargetFunction = (sender) => {\n        // console.log(sender.title() + ' toggle was clicked')\n        //Small Caps Upper Case\n        // ID: kUpperCaseType\n        //\n        // SELECTORS\n        //\n        // kDefaultUpperCaseSelector = 0\n        // Use standard upper-case glyphs\n        //\n        // kUpperCaseSmallCapsSelector = 1\n        // Display upper-case glyphs as small caps (used commonly with acronyms).\n        //\n        // kUpperCasePetiteCapsSelector = 2\n        // Display upper-case glyphs as petite caps\n        //\n        if (sender.state() == 0) {\n            //Need to set to default setting\n            let settingsAttribute = getSettingsAttributeForKey_Value(kUpperCaseType, kDefaultUpperCaseSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        } else {\n            let settingsAttribute = getSettingsAttributeForKey_Value(kUpperCaseType, kUpperCaseSmallCapsSelector)\n            updateFontFeatureSettingsAttribute(settingsAttribute)\n        }\n    }\n    pushOnOffButtonUpperCase.setCOSJSTargetFunction(sender => smallCapsUpperCaseTargetFunction(sender))\n\n    var upperCaseLabel = createTextField({\n        text: \"Upper Case\",\n        frame: NSMakeRect(0,0,66,14),\n        alignment: NSTextAlignmentCenter,\n        fontSize: 11\n    })\n\n    var upperCaseStackView = NSStackView.stackViewWithViews([pushOnOffButtonUpperCase,upperCaseLabel])\n    upperCaseStackView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    upperCaseStackView.setSpacing(4)\n    upperCaseStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var smallCapsButtonGroupStackView = NSStackView.stackViewWithViews([smallCapsExampleLabel,lowerCaseStackView,upperCaseStackView])\n    smallCapsButtonGroupStackView.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    smallCapsButtonGroupStackView.setAlignment(NSLayoutAttributeFirstBaseline)\n    smallCapsButtonGroupStackView.setSpacing(4)\n    smallCapsButtonGroupStackView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    var row4 = NSStackView.alloc().initWithFrame(NSMakeRect(0,0,mainViewWidth,36))\n    row4.setOrientation(NSUserInterfaceLayoutOrientationHorizontal)\n    row4.setAlignment(NSLayoutAttributeFirstBaseline)\n    row4.setSpacing(columnSpacing)\n    row4.setViews_inGravity([smallCapsLabel, smallCapsButtonGroupStackView], NSStackViewGravityLeading)\n\n    // MARK: Combine rows together\n    var mainContentView = NSStackView.stackViewWithViews([row1,row2,row3, row4])\n    mainContentView.setOrientation(NSUserInterfaceLayoutOrientationVertical)\n    mainContentView.setAlignment(NSLayoutAttributeLeading)\n    mainContentView.setSpacing(8)\n    mainContentView.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    panel.contentView().addSubview(mainContentView)\n    panel.contentView().setFlipped(true)\n    fitSubviewToView(mainContentView,panel.contentView(),[16.0,16.0,8.0,16.0])\n    //addVibrancyView(panel.contentView())\n\n    threadDictionary[identifier] = panel;\n\n    var closeButton = panel.standardWindowButton(NSWindowCloseButton)\n    closeButton.setCOSJSTargetFunction(function(sender) {\n        closePanel(panel, threadDictionary, identifier)\n    })\n}\n\nfunction addVibrancyView(superview) {\n    var vibrancy = NSVisualEffectView.alloc().initWithFrame(NSMakeRect(0, 0, panelWidth, panelHeight))\n    // TODO: Control Light/Dark Appearance\n    vibrancy.setAppearance(NSAppearance.appearanceNamed(NSAppearanceNameVibrantLight))\n    vibrancy.setBlendingMode(NSVisualEffectBlendingModeBehindWindow)\n    superview.addSubview(vibrancy)\n    fitSubviewToView(vibrancy,superview, [0.0,0.0,0.0,0.0])\n}\n\nfunction fitSubviewToView(subview, view, constants) {\n    subview.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n    addEdgeConstraint(NSLayoutAttributeTop, subview, view, constants[0])\n    addEdgeConstraint(NSLayoutAttributeTrailing, subview, view, constants[1])\n    addEdgeConstraint(NSLayoutAttributeBottom, subview, view, constants[2])\n    addEdgeConstraint(NSLayoutAttributeLeading, subview, view, constants[3])\n}\n\nfunction addEdgeConstraint(layoutAttribute, subview, view, constant) {\n    view.addConstraint(\n        NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n                subview,\n                layoutAttribute,\n                NSLayoutRelationEqual,\n                view,\n                layoutAttribute,\n                1.0,\n                constant\n            )\n        )\n}\n\nfunction createTextField({text, frame, alignment, fontSize = 13}) {\n    const label = NSTextField.alloc().initWithFrame(frame)\n    label.setStringValue(text)\n    label.setAlignment(alignment)\n    label.setFont(NSFont.systemFontOfSize(fontSize))\n    label.setBezeled(false)\n    label.setDrawsBackground(false)\n    label.setEditable(false)\n    label.setSelectable(false)\n    return label\n}\n\nfunction updateFontFeatureSettingsAttribute(settingsAttribute) {\n    var document = sketch.getSelectedDocument();\n    var textLayer = document.selectedLayers.layers[0]\n    var font = textLayer.sketchObject.font()\n    var fontSize = font.pointSize()\n    var fontFeatureSettings = font.fontDescriptor().fontAttributes()[NSFontFeatureSettingsAttribute]\n    const descriptor = font.fontDescriptor().fontDescriptorByAddingAttributes(settingsAttribute)\n\n    const newFont = NSFont.fontWithDescriptor_size(descriptor,fontSize)\n\n    if (textLayer.sketchObject.isEditingText() == 1) {\n        // In Edit Mode\n        console.log(\"In Edit Mode\")\n        let textStorage = textLayer.sketchObject.editingDelegate().textStorage()\n        textStorage.beginEditing()\n        textStorage.setAttributes_range(settingsAttribute, NSMakeRange(0,5))\n        textStorage.endEditing()\n    } else {\n        textLayer.sketchObject.setFont(newFont)\n    }\n    document.sketchObject.inspectorController().reload()\n}\n\nfunction getFontForKey_Value(key, value) {\n    let defaultButtonFont = NSFont.boldSystemFontOfSize(13)\n    let settingsAttribute = getSettingsAttributeForKey_Value(key, value)\n    var fontFeatureSettings = defaultButtonFont.fontDescriptor().fontAttributes()[NSFontFeatureSettingsAttribute]\n    const descriptor = defaultButtonFont.fontDescriptor().fontDescriptorByAddingAttributes(settingsAttribute)\n    const newFont = NSFont.fontWithDescriptor_size(descriptor,13)\n    return newFont\n\n}\n\nfunction getSettingsAttributeForKey_Value(key, value) {\n    let settingsAttribute = {\n        [NSFontFeatureSettingsAttribute]: [{\n            [NSFontFeatureTypeIdentifierKey]: key,\n            [NSFontFeatureSelectorIdentifierKey]: value\n        }]\n    }\n\n    return settingsAttribute\n}\n\nfunction updateUI() {\n    var document = sketch.getSelectedDocument()\n    var textLayer = document.selectedLayers.layers[0]\n    let threadDictionary = NSThread.mainThread().threadDictionary()\n    if (!textLayer) {\n        disableUI(threadDictionary)\n        return\n    }\n    var font = textLayer.sketchObject.font()\n    var fontSize = font.pointSize()\n    var fontFeatureSettings = font.fontDescriptor().fontAttributes()[NSFontFeatureSettingsAttribute]\n\n    //Start with Default Settings\n    var defaultUISettings = {\n        'verticalPosition': 'default', // 'default', 'superscript', 'subscript', 'ordinals', 'scientific inferiors'\n        'numberSpacing': 'proportional', // 'proportional', 'monospaced'\n        'numberCase': 'lining', // 'lining', 'oldStyle'\n        'smallCapsLowerCase': false, // bool\n        'smallCapsUpperCase': false // bool\n    }\n\n    // Update uiSettings array\n    // need to do this because fontFeatureSettings only has\n    // settings for applied options (doesn't contain state for all options)\n    var updatedUISettings\n    if (fontFeatureSettings) {\n        updatedUISettings = modifyUISettings(fontFeatureSettings, defaultUISettings)\n    } else {\n        updatedUISettings = defaultUISettings\n    }\n\n    //Update UI Panel with only one update (to prevent flickering)\n    for (var uiSetting in updatedUISettings) {\n        if (uiSetting == 'verticalPosition') {\n\n        let verticalPositionPopupButton = threadDictionary[verticalPositionPopupButtonID]\n        verticalPositionPopupButton.setEnabled(true)\n            if (updatedUISettings[uiSetting] == 'default') {\n                // console.log('Setting UI: Vertical Position = Default Position')\n                verticalPositionPopupButton.selectItemWithTitle('Default Position')\n            } else if (updatedUISettings[uiSetting] == 'superscript') {\n                // console.log('Setting UI: Vertical Position = Superscript')\n                verticalPositionPopupButton.selectItemWithTitle('Superscript')\n            } else if (updatedUISettings[uiSetting] == 'subscript') {\n                // console.log('Setting UI: Vertical Position = Subscript')\n                verticalPositionPopupButton.selectItemWithTitle('Subscript')\n            } else if (updatedUISettings[uiSetting] == 'ordinals') {\n                // console.log('Setting UI: Vertical Position = Ordinals')\n                verticalPositionPopupButton.selectItemWithTitle('Ordinals')\n            } else if (updatedUISettings[uiSetting] == 'scientific inferiors') {\n                // console.log('Setting UI: Vertical Position = Scientific Notation')\n                verticalPositionPopupButton.selectItemWithTitle('Scientific Notation')\n            } else {\n                // console.log('Error: Attempting update panel state - Out of scope of verticalPosition options')\n            }\n\n        } else if (uiSetting == 'numberSpacing') {\n            let radioButtonProportional = threadDictionary[radioButtonProportionalID]\n            let radioButtonMonospacedOrTabular = threadDictionary[radioButtonMonospacedOrTabularID]\n            radioButtonProportional.setEnabled(true)\n            radioButtonMonospacedOrTabular.setEnabled(true)\n\n            if (updatedUISettings[uiSetting] == 'proportional') {\n                // console.log('Setting UI: Number Spacing = Proportional')\n                radioButtonProportional.setState(NSOnState)\n                radioButtonMonospacedOrTabular.setState(NSOffState)\n            } else if (updatedUISettings[uiSetting] == 'monospaced') {\n                // console.log('Setting UI: Number Spacing == Monospaced/Tabular')\n                radioButtonProportional.setState(NSOffState)\n                radioButtonMonospacedOrTabular.setState(NSOnState)\n            } else {\n                // console.log('Error: Attempting update panel state - Out of scope of numberSpacing options')\n            }\n\n        } else if (uiSetting == 'numberCase') {\n            let radioButtonLiningFigures = threadDictionary[radioButtonLiningFiguresID]\n            let radioButtonOldStyleFigures = threadDictionary[radioButtonOldStyleFiguresID]\n            radioButtonLiningFigures.setEnabled(true)\n            radioButtonOldStyleFigures.setEnabled(true)\n\n            if (updatedUISettings[uiSetting] == 'lining') {\n                // console.log('Setting UI: Number Case = Lining figures')\n                radioButtonLiningFigures.setState(NSOnState)\n                radioButtonOldStyleFigures.setState(NSOffState)\n            } else if (updatedUISettings[uiSetting] == 'oldStyle') {\n                // console.log('Setting UI: Number Case = Old-style figures')\n                radioButtonLiningFigures.setState(NSOffState)\n                radioButtonOldStyleFigures.setState(NSOnState)\n            } else {\n                // console.log('Error: Attempting to update panel state - Out of scope of numberCase options')\n            }\n\n        } else if (uiSetting == 'smallCapsUpperCase') {\n            let pushOnOffButtonUpperCase = threadDictionary[pushOnOffButtonUpperCaseID]\n            pushOnOffButtonUpperCase.setEnabled(true)\n\n            if (updatedUISettings[uiSetting] == false) {\n                // console.log('Setting UI: Small Caps Upper Case = Off')\n                pushOnOffButtonUpperCase.setState(NSOffState)\n            } else if (updatedUISettings[uiSetting] == true) {\n                // console.log('Setting UI: Small Caps Upper Case = On')\n                pushOnOffButtonUpperCase.setState(NSOnState)\n            }\n\n        } else if (uiSetting == 'smallCapsLowerCase') {\n            let pushOnOffButtonLowerCase = threadDictionary[pushOnOffButtonLowerCaseID]\n            pushOnOffButtonLowerCase.setEnabled(true)\n\n            if (updatedUISettings[uiSetting] == false) {\n                // console.log('Setting UI: Small Caps Lower Case = Off')\n                pushOnOffButtonLowerCase.setState(NSOffState)\n            } else if (updatedUISettings[uiSetting] == true) {\n                // console.log('Setting UI: Small Caps Lower Case = On')\n                pushOnOffButtonLowerCase.setState(NSOnState)\n            }\n\n        } else {\n            // console.log('Error: Unhandled uiSetting Property')\n            // console.log(updatedUISettings[uiSetting])\n        }\n    }\n}\n\nfunction modifyUISettings(fontFeatureSettings, uiSettings) {\n    console.log(fontFeatureSettings)\n    fontFeatureSettings.forEach(function(featureSetting) {\n        const featureTypeIdentifierKey = featureSetting[NSFontFeatureTypeIdentifierKey]\n        const featureSelectorIdentifierKey = featureSetting[NSFontFeatureSelectorIdentifierKey]\n\n        if (featureTypeIdentifierKey == 10) {\n            // kVerticalPosition\n            if (featureSelectorIdentifierKey == 0) {\n                // kNormalPositionSelector\n                uiSettings.verticalPosition = 'default'\n            } else if (featureSelectorIdentifierKey == 1) {\n                // kSuperiorsSelector\n                uiSettings.verticalPosition = 'superscript'\n            } else if (featureSelectorIdentifierKey == 2) {\n                // kInferiorsSelector\n                uiSettings.verticalPosition = 'subscript'\n            } else if (featureSelectorIdentifierKey == 3) {\n                // kOrdinalsSelector\n                uiSettings.verticalPosition = 'ordinals'\n            } else if (featureSelectorIdentifierKey == 4) {\n                // kScientificInferiorsSelector\n                uiSettings.verticalPosition = 'scientific inferiors'\n            } else {\n                // console.log(\"Unknown Feature for Vertical Position\")\n            }\n        }\n\n        if (featureTypeIdentifierKey == 6) {\n            //kNumberSpacing\n            if (featureSelectorIdentifierKey == 0) {\n                // kMonospacedNumbersSelector\n                uiSettings.numberSpacing = 'monospaced'\n            } else if (featureSelectorIdentifierKey == 1) {\n                // kProportionalNumbersSelector\n                uiSettings.numberSpacing = 'proportional'\n            } else if (featureSelectorIdentifierKey == 2) {\n                // kThirdWidthNumbersSelector\n                // console.log(\"Unsupported Number Spacing Feature - Third-width Numerals (Thin numerals)\")\n            } else if (featureSelectorIdentifierKey == 3) {\n                // kQuarterWidthNumbersSelector\n                // console.log(\"Unsupported Number Spacing Feature - Quarter-width Numerals (Very Yhin Numerals\")\n            } else {\n                // console.log(\"Unknown feature for Number Spacing\")\n            }\n        }\n\n        if (featureTypeIdentifierKey == 21) {\n            // kNumberCaseType\n            if (featureSelectorIdentifierKey == 0) {\n                // kLowerCaseNumbersSelector\n                uiSettings.numberCase = 'oldStyle'\n            } else if (featureSelectorIdentifierKey == 1) {\n                // kUpperCaseNumbersSelector\n                uiSettings.numberCase = 'lining'\n            } else {\n                // console.log(\"Unknown feature for Number Case\")\n            }\n        }\n\n        if (featureTypeIdentifierKey == 37) {\n            // kLowerCase\n            if (featureSelectorIdentifierKey == 0) {\n                // kDefaultLowerCaseSelector (aka OFF)\n                uiSettings.smallCapsLowerCase = false\n            } else if (featureSelectorIdentifierKey == 1) {\n                // kLowerCaseSmallCapsSelector\n                uiSettings.smallCapsLowerCase = true\n            } else if (featureSelectorIdentifierKey == 2) {\n                // kLowerCasePetiteCapsSelector\n                // console.log(\"Unsupported Lower Case Small Caps Feature - Lower Case Petite Caps\")\n            }\n        }\n\n        if (featureTypeIdentifierKey == 38) {\n            // kUpperCase\n            if (featureSelectorIdentifierKey == 0) {\n                // kDefaultUpperCaseSelector (aka OFF)\n                uiSettings.smallCapsUpperCase = false\n            } else if (featureSelectorIdentifierKey == 1) {\n                // kUpperCaseSmallCapsSelector\n                uiSettings.smallCapsUpperCase = true\n            } else if (featureSelectorIdentifierKey == 2) {\n                // kUpperCasePetiteCapsSelector\n                // console.log(\"Unsupported Upper Case Small Caps Feature - Upper Case Petite Caps\")\n            }\n        }\n    })\n\n    return uiSettings\n}\n\nfunction disableUI(threadDictionary) {\n    let verticalPositionPopupButton = threadDictionary[verticalPositionPopupButtonID]\n    verticalPositionPopupButton.setEnabled(false)\n\n    let radioButtonProportional = threadDictionary[radioButtonProportionalID]\n    let radioButtonMonospacedOrTabular = threadDictionary[radioButtonMonospacedOrTabularID]\n    radioButtonProportional.setEnabled(false)\n    radioButtonMonospacedOrTabular.setEnabled(false)\n\n    let radioButtonLiningFigures = threadDictionary[radioButtonLiningFiguresID]\n    let radioButtonOldStyleFigures = threadDictionary[radioButtonOldStyleFiguresID]\n    radioButtonLiningFigures.setEnabled(false)\n    radioButtonOldStyleFigures.setEnabled(false)\n\n    let pushOnOffButtonUpperCase = threadDictionary[pushOnOffButtonUpperCaseID]\n    pushOnOffButtonUpperCase.setEnabled(false)\n\n    let pushOnOffButtonLowerCase = threadDictionary[pushOnOffButtonLowerCaseID]\n    pushOnOffButtonLowerCase.setEnabled(false)\n}\n\nfunction closePanel(panel, threadDictionary, threadIdentifier) {\n        panel.close()\n\n        //Remove the reference to the panel\n        threadDictionary.removeObjectForKey(threadIdentifier)\n        threadDictionary.panelOpen = false\n\n        //Stop this script\n        COScript.currentCOScript().setShouldKeepAround_(false)\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}